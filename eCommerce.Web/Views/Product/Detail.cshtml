@model ProductDetailDto

@{
    ViewData["Title"] = Model.Name;
    var selectedColorId = ViewBag.SelectedColorId as int?;
    var selectedSizeId = ViewBag.SelectedSizeId as int?;
}

<h1 class="my-4">@Model?.Name</h1>

<input type="hidden" id="productId" value="@Model.Id" />
<input type="hidden" id="regionCode" value="@ViewBag.CurrentRegion" />


<div class="card mb-4">
    <div id="product-detail-id">
        @Html.Partial("_VariantOptionsPartial", Model)
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {

            function updateUrlParams(sizeId, fabricId, finishId) {
                const url = new URL(window.location.href);
                if (sizeId) url.searchParams.set("size", sizeId);
                if (fabricId) url.searchParams.set("fabric", fabricId);
                if (finishId) url.searchParams.set("finish", finishId);
                window.history.replaceState({}, '', url);
            }

            function fetchVariantOptions(productId, sizeId, fabricId, finishId) {
                const regionCode = document.getElementById("regionCode").value;

                updateUrlParams(sizeId, fabricId, finishId); // colorId chưa dùng

                let url = `/${productId}/GetVariantPartial/${regionCode}?`;

                const params = [];
                if (sizeId) params.push(`sizeId=${sizeId}`);
                if (fabricId) params.push(`fabricId=${fabricId}`);
                if (finishId) params.push(`finishId=${finishId}`);
                url += params.join('&');

                $.ajax({
                    url: url,
                    type: 'GET',
                    success: function (response) {
                        if (response) {
                            document.getElementById("product-detail-id").innerHTML = response;
                            bindOptionEvents(); // rebind events
                           // updatePriceAndImages(response); // also update price & images
                        } else {
                            alert("No variant found.");
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error fetching variant: ", error);
                        alert('@SharedLocalizer["ErrorAddingProductToCart"].Value');
                    }
                });
            }

            function updatePriceAndImages(response) {
                const data = response.data.selectedVariant;
                if (data && data.priceAdjustment) {
                    const price = @Html.Raw(Json.Serialize(Model.Price));
                    const basePrice = parseFloat(price);
                    const totalPrice = basePrice + parseFloat(data.priceAdjustment);
                    document.getElementById("product-price").innerText = `$${totalPrice.toFixed(2)}`;
                }

                const imageContainer = document.getElementById("variant-images");
                imageContainer.innerHTML = "";
                if (data.images && data.images.length > 0) {
                    const gallery = document.createElement("div");
                    gallery.className = "image-gallery";
                    data.images.forEach(img => {
                        const image = document.createElement("img");
                        image.src = img.imageUrl;
                        image.className = "img-thumbnail me-2";
                        image.style.maxHeight = "100px";
                        gallery.appendChild(image);
                    });
                    imageContainer.appendChild(gallery);
                }

            }

            function bindOptionEvents() {
                document.querySelectorAll(".size-btn").forEach(btn => {
                    btn.onclick = () => {
                        document.querySelectorAll(".size-btn").forEach(b => b.classList.remove("selected"));
                        btn.classList.add("selected");

                        const sizeId = btn.dataset.sizeid;
                        const productId = document.getElementById("productId").value;
                        const fabricId = document.querySelector(".fabric-thumb.selected")?.dataset.fabricid;
                        const finishId = document.querySelector(".finish-thumb.selected")?.dataset.finishid;

                        fetchVariantOptions(productId, sizeId, fabricId, finishId);
                    };
                });

                document.querySelectorAll(".fabric-thumb").forEach(el => {
                    el.onclick = () => {
                        // Remove active class from all
                        document.querySelectorAll(".fabric-thumb").forEach(btn => btn.classList.remove("selected"));
                        el.classList.add("selected");

                        const fabricId = el.dataset.fabricid;
                        const productId = document.getElementById("productId").value;
                        const sizeId = document.querySelector(".size-btn.selected")?.dataset.sizeid;
                        const finishId = document.querySelector(".finish-thumb.selected")?.dataset.finishid;

                        fetchVariantOptions(productId, sizeId, fabricId, finishId);
                    };
                });

                document.querySelectorAll(".finish-thumb").forEach(el => {
                    el.onclick = () => {
                        document.querySelectorAll(".finish-thumb").forEach(e => e.classList.remove("selected"));
                        el.classList.add("selected");

                        const finishId = el.dataset.finishid;
                        const productId = document.getElementById("productId").value;
                        const sizeId = document.querySelector(".size-btn.selected")?.dataset.sizeid;
                        const fabricId = document.querySelector(".fabric-thumb.selected")?.dataset.fabricid;

                        fetchVariantOptions(productId, sizeId, fabricId, finishId);
                    };
                });

            }

            bindOptionEvents();

            $('#addToCartBtn').click(function () {
                const productId = document.getElementById("productId").value;
                const quantity = document.getElementById("cart-quantity").value;
                const variantId = document.getElementById("variantId").value;
                const regionCode = document.getElementById("regionCode").value;

                const sizeId = document.querySelector(".size-btn.selected")?.dataset.sizeid;
                const fabricId = document.querySelector(".fabric-thumb.selected")?.dataset.fabricid;
                const finishId = document.querySelector(".finish-thumb.selected")?.dataset.finishid;

                $.ajax({
                    url: '@Url.Action("AddToCart", "Product")',
                    type: 'POST',
                    data: { 
                        productId: productId,
                        quantity: quantity,
                        variantId: variantId,
                        sizeId: sizeId,
                        fabricId: fabricId,
                        finishId: finishId,
                        customerRegionCode: regionCode
                    },
                    success: function (response) {
                        if (response.isSuccess) {
                            window.location.href = response.redirectUrl;
                        } 
                    },
                    error: function (xhr, status, error) {
                        console.error("Error adding to cart: ", error);
                    }
                });
            });
        });
    </script>
}