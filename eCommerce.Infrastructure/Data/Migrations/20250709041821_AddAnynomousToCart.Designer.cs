// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eCommerce.Infrastructure.Data;

#nullable disable

namespace eCommerce.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250709041821_AddAnynomousToCart")]
    partial class AddAnynomousToCart
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eCommerce.Domain.Entities.ApplicationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b1d7f736-9c9f-41f5-9179-9d3ce2a1c63a"),
                            ConcurrencyStamp = "1e41d6d6-cb90-4387-8488-bb43a7e91a04",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("f3c6e017-491f-4531-bdf4-60414e5a1c25"),
                            ConcurrencyStamp = "c00a133f-783c-40f1-a6e9-2c6c0592b00c",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ApplicationRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("LastName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "891a2b24-ea50-480e-82e8-04ad8a4adc10",
                            Dob = new DateTime(2020, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "maileduong92@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Duong",
                            LastName = "Mai",
                            LockoutEnabled = false,
                            NormalizedEmail = "maileduong92@gmail.com",
                            NormalizedUserName = "admin",
                            PasswordHash = "AQAAAAIAAYagAAAAEAUX4qD/dzmvUJfb/GoO8SF89T11+JwvgcAYRX6vn3/+l3i6Zh4CBk6TxZ11VLI2jA==",
                            PhoneNumberConfirmed = false,
                            RegionId = 0,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = new Guid("a4cc4bd7-64c7-4b4c-8de8-924a35223ed0"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "71df2321-a977-4fcd-abb8-16c69b6cae20",
                            Dob = new DateTime(2020, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "customer@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Duong",
                            LastName = "Mai",
                            LockoutEnabled = false,
                            NormalizedEmail = "customer@gmail.com",
                            NormalizedUserName = "customer",
                            PasswordHash = "AQAAAAIAAYagAAAAEFNZWNebPQ3fdGAQZnkCha97dmYWFVIYVt34ILVCu1weZqOAm8ptVbCIhTNW7G1Zkw==",
                            PhoneNumberConfirmed = false,
                            RegionId = 0,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "customer"
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ApplicationUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ApplicationUserLogin", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ApplicationUserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            RoleId = new Guid("b1d7f736-9c9f-41f5-9179-9d3ce2a1c63a")
                        },
                        new
                        {
                            UserId = new Guid("69bd714f-9576-45ba-b5b7-f00649be00de"),
                            RoleId = new Guid("f3c6e017-491f-4531-bdf4-60414e5a1c25")
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ApplicationUserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.Care", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContentBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentImageS7")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ContentTitle")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("IamgeUrl")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cares", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContentBody = "<p>Frequently dust exposed surfaces with a clean, damp natural cloth. Dry the surface with another clean, dry cloth. Infrequently polish your furniture (a few times a year at most) with a non-silicon-base furniture polish made by a reputable manufacturer, taking care to follow the instructions. Bear in mind that one manufacturer’s furniture care products should never be used in combination with another. Product formulations are unique to each manufacturer and are made to blend with another, so using different polishes may cause build-up that can appear cloudy or dull over time, and/or feel sticky to the touch. Always polish or dust with a motion that follows the grain of the wood to avoid scratching the surface, and allow polish to dry completely before replacing any objects on the surface.</p>",
                            ContentImageS7 = "Wood",
                            ContentTitle = "Wood",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1341),
                            DisplayName = "Wood",
                            IamgeUrl = "https://theodorealexander.sirv.com/website/Frontend/Live/assests/furniture-care/wood.jpg",
                            IsActive = true,
                            Name = "Wood",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 2,
                            ContentBody = "<p>Theodore Alexander artists painstakingly create our hand-painted finishes using meticulous brushstrokes and age-old techniques. You can use a good quality furniture polish to maintain and preserve the unique artwork. Take care not to use abrasive cloths or polishes that may scratch a hand-painted finish.</p><ul><li>• Eglomisé – Eglomisé is a hand-made, centuries-old process that creates a stunning reflective surface. Regularly dust with a feather duster and wipe clean with a damp, lint-free cloth.</li><li>• Argento – The Argento finish from Theodore Alexander is the result of an exclusive finishing process. From time to time, wipe clean with a soft, damp cloth, taking care not to over-wet the surface.</li></ul>",
                            ContentImageS7 = "Artistry",
                            ContentTitle = "Artistry",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1376),
                            DisplayName = "Artistry",
                            IamgeUrl = "https://theodorealexander.sirv.com/website/Frontend/Live/assests/furniture-care/wood.jpg",
                            IsActive = true,
                            Name = "Artistry",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 3,
                            ContentBody = "<p>Remove all loose cushions. Loosen dirt with a hand-held dusting brush while using a vacuum brush attachment to remove dust. Vacuum all surfaces of the furniture: back, sides, arms, skirt (if applicable) and the platform beneath the cushions. Vacuum both sides of the loose cushions.</p><p>When necessary, you can use commercially available cleaners on Theodore Alexander upholstery. Be sure to test on an inconspicuous area first. For day-to-day cleaning use a soft clean damp cloth.</p>",
                            ContentImageS7 = "Upholstery",
                            ContentTitle = "Upholstery",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1396),
                            DisplayName = "Upholstery",
                            IamgeUrl = "https://theodorealexander.sirv.com/website/Frontend/Live/assests/furniture-care/wood.jpg",
                            IsActive = true,
                            Name = "Upholstery",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 4,
                            ContentBody = "<p>Leather is a naturally hard-wearing and versatile material that will gain a characteristic and pleasing patina over time. Leather will show natural marks with wrinkles, scars, scratches and bites which are all normal. It is these characteristics that differentiate real hide from synthetic or re-constituted coverings. Take care not to expose your leather or hide product to continuous direct sunlight as this might  lead to fading.</p><p>For accidental spills, try to wipe up immediately and don’t allow the stain to dry. Light stains can be removed with a diluted solution of a neutral soap in lukewarm water, but be careful not to soak the leather or hide. Occasionally, pencil marks and other light marks can be removed by rubbing the area lightly with an eraser. If your leather or hide is heavily soiled, we recommend professional cleaning.</p>",
                            ContentImageS7 = "Leather",
                            ContentTitle = "Leather",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1416),
                            DisplayName = "Leather",
                            IamgeUrl = "https://theodorealexander.sirv.com/website/Frontend/Live/assests/furniture-care/wood.jpg",
                            IsActive = true,
                            Name = "Leather",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 5,
                            ContentBody = "<p>Theodore Alexander lampshades are meticulously handmade by skilled craftspeople. Most shades simply require a light dusting with a feather duster or soft brush to remove dust. Vacuum using smooth, light strokes with the small bristle attachment found on most vacuum cleaners, or gently wipe with a soft, clean cloth.</p>",
                            ContentImageS7 = "Lampshades",
                            ContentTitle = "Lampshades",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1436),
                            DisplayName = "Lampshades",
                            IamgeUrl = "https://theodorealexander.sirv.com/website/Frontend/Live/assests/furniture-care/wood.jpg",
                            IsActive = true,
                            Name = "Lampshades",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 6,
                            ContentBody = "<p>The plain brass and etched tops and panels used on Theodore Alexander furniture require particular care during use and cleaning. Each panel has a rich patina created by a process of natural oxidization that leads to the deep colouration. Having been created by natural elements, etched brass is particularly sensitive to certain compounds and liquids, particularly those with abrasive or acidic bases. This includes wine, spirits and some furniture creams.</p><p>We recommend you take precautions to avoid spills and scratches by using coasters and placemats. Should a spill occur it must be wiped up immediately with a soft, clean cloth. Scratches may be touched up using a dark coloured shoe wax. </p><p>Over time you may see some colouration changes in the finish, such as a soft mottling. This is perfectly natural as the oxidization process continues and will in no way detract from the beauty of the item. </p><p>For everyday cleaning we recommend that you use only a soft, natural fibre cloth and a small amount of oil soap. </p>",
                            ContentImageS7 = "Etched Brass",
                            ContentTitle = "Etched Brass",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1459),
                            DisplayName = "Etched Brass",
                            IamgeUrl = "https://theodorealexander.sirv.com/website/Frontend/Live/assests/furniture-care/wood.jpg",
                            IsActive = true,
                            Name = "Etched Brass",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 7,
                            ContentBody = "Each piece of brass inlay is carefully inset by hand by a Theodore Alexander artisan. Simply wipe clean using a soft, damp cloth and a gentle hand.",
                            ContentImageS7 = "Brass Inlay",
                            ContentTitle = "Brass Inlay",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1480),
                            DisplayName = "Brass Inlay",
                            IamgeUrl = "https://theodorealexander.sirv.com/website/Frontend/Live/assests/furniture-care/wood.jpg",
                            IsActive = true,
                            Name = "Brass Inlay",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 8,
                            ContentBody = "Regularly dust and wipe clean with a good quality furniture polish twice each month. Avoid using soap and water or any water-based cleaning products on iron as this may cause rusting.",
                            ContentImageS7 = "Iron",
                            ContentTitle = "Iron",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1500),
                            DisplayName = "Iron",
                            IamgeUrl = "https://theodorealexander.sirv.com/website/Frontend/Live/assests/furniture-care/wood.jpg",
                            IsActive = true,
                            Name = "Iron",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 9,
                            ContentBody = "Brass artworks are hand cast in our own foundry, using age-old techniques. Occasional application of an inert wax that does not contain a cleansing agent will preserve the patina of the metal. Avoid using abrasive cloths or polishes that may damage the surface.",
                            ContentImageS7 = "Brass",
                            ContentTitle = "Brass",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1520),
                            DisplayName = "Brass",
                            IamgeUrl = "https://theodorealexander.sirv.com/website/Frontend/Live/assests/furniture-care/wood.jpg",
                            IsActive = true,
                            Name = "Brass",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 10,
                            ContentBody = "<p>Warm water and a soft, lint-free cloth are ideal for routine cleaning. Wipe in the direction of the polish lines and dry with a towel or cloth to prevent water spots. Stainless steel cleaner cloths can help minimize scratching, remove stains and polish stainless steel surfaces nicely. Be sure to test in an inconspicuous spot.</p>",
                            ContentImageS7 = "Stainless Steel",
                            ContentTitle = "Stainless Steel",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1542),
                            DisplayName = "Stainless Steel",
                            IamgeUrl = "https://theodorealexander.sirv.com/website/Frontend/Live/assests/furniture-care/wood.jpg",
                            IsActive = true,
                            Name = "Stainless Steel",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 11,
                            ContentBody = "Rub piece with a non-abrasive nickel-plate cleanser and a clean, dry cloth. Buff gently with smooth strokes to restore lustre.",
                            ContentImageS7 = "Nickel Plate",
                            ContentTitle = "Nickel Plate",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1563),
                            DisplayName = "Nickel Plate",
                            IamgeUrl = "https://theodorealexander.sirv.com/website/Frontend/Live/assests/furniture-care/wood.jpg",
                            IsActive = true,
                            Name = "Nickel Plate",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 12,
                            ContentBody = "<p>Coasters should be used under all glasses, particularly those with alcohol or citrus content. Avoid placing hot items directly on the stone surface. Trivets or mats should be used under hot dishes and placemats under china, ceramics, silver or other objects that could scratch the surface. For calcareous (chalky) stones, many common foods and drinks that contain acids will etch or dull the surface.</p><ul><li>Clean stone surfaces with a few drops of neutral cleaner, stone soap, or a mild liquid dishwashing detergent and warm water. Use a clean soft cloth for best results. Excessive cleaner or soap could leave a film and cause streaks. Do not use products that contain lemon, vinegar, or other acids or bleach on marble or limestone. The surface should be thoroughly rinsed after washing with the soap solution and dried with a soft cloth. Avoid the use of scouring powders or creams; these abrasives will scratch the surface.</li></ul>",
                            ContentImageS7 = "Stone",
                            ContentTitle = "Stone",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1624),
                            DisplayName = "Nickel Plate",
                            IamgeUrl = "https://theodorealexander.sirv.com/website/Frontend/Live/assests/furniture-care/wood.jpg",
                            IsActive = true,
                            Name = "Stone",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 13,
                            ContentBody = "A light dusting with a soft brush is all that is needed to clean bone, horn and antler objects. Bone and horn that are in good condition (that is with a smooth, glossy surface) and have no applied decoration can be cleaned with a little water and a soft, clean cloth. Dry the object immediately with another cloth.",
                            ContentImageS7 = "Bone / Horn",
                            ContentTitle = "Bone / Horn",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1648),
                            DisplayName = "Bone / Horn",
                            IamgeUrl = "https://theodorealexander.sirv.com/website/Frontend/Live/assests/furniture-care/wood.jpg",
                            IsActive = true,
                            Name = "Bone / Horn",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 14,
                            ContentBody = "<p>Theodore Alexander artists painstakingly create our hand-painted finishes using meticulous brushstrokes and age-old techniques. You can use a good quality furniture polish to maintain and preserve the unique artwork. Take care not to use abrasive cloths or polishes that may scratch a hand-painted finish.</p><ul><li>• Eglomisé – Eglomisé is a hand-made, centuries-old process that creates a stunning reflective surface. Regularly dust with a feather duster and wipe clean with a damp, lint-free cloth.</li><li>• Argento – The Argento finish from Theodore Alexander is the result of an exclusive finishing process. From time to time, wipe clean with a soft, damp cloth, taking care not to over-wet the surface.</li></ul>",
                            ContentImageS7 = "Hand Painting Eglomisé",
                            ContentTitle = "Hand Painting Eglomisé",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1672),
                            DisplayName = "Hand Painting Eglomisé",
                            IamgeUrl = "https://theodorealexander.sirv.com/website/Frontend/Live/assests/furniture-care/wood.jpg",
                            IsActive = true,
                            Name = "Hand Painting Eglomisé",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 15,
                            ContentBody = "Hand-blown glass is created by artisans and each piece is unique. There will be variations in shape and form that are illustrative of the hand-made nature of each piece. Hand-blown glass tends to be more delicate than mass-produced glass and we recommend gentle cleaning with a damp, soft cloth to maintain the lustre and beauty of the original piece.",
                            ContentImageS7 = "Glass",
                            ContentTitle = "Glass",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1693),
                            DisplayName = "Glass",
                            IamgeUrl = "https://theodorealexander.sirv.com/website/Frontend/Live/assests/furniture-care/wood.jpg",
                            IsActive = true,
                            Name = "Glass",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 16,
                            ContentBody = "Once a week, dust exposed surfaces with a clean and moist cotton cloth. Then dry the surface with a clean and dry cloth. Once a month, polish your furniture with a non-silicone good quality paste wax made by a reputable manufacturer, taking care to follow the instructions. Always polish or dust with a motion that follows the grain of the wood to avoid scratching the surface, and allow polish to dry completely before replacing any objects on the surface. For greasy stains or waxy build-up use a diluted dish detergent which should be wiped on with a clean cloth and removed with another. The whole affected surface should be waxed after this process to maintain consistency in protection.",
                            ContentImageS7 = "Crotch",
                            ContentTitle = "Crotch",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1713),
                            DisplayName = "Crotch",
                            IamgeUrl = "https://theodorealexander.sirv.com/website/Frontend/Live/assests/furniture-care/wood.jpg",
                            IsActive = true,
                            Name = "Crotch",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 17,
                            ContentBody = "<p>Dust with a soft, damp cloth or chamois. Dry or gritty cloths may cause surface scratches and create a static electric charge on the surface. Clean Acrylic with a solution of mild soap or detergent and lukewarm water. Use a clean soft cloth, applying only light pressure. Rinse with clean water and dry by blotting with a damp cloth or chamois. DO NOT USE: Window cleaning sprays, kitchen scouring compounds or solvents such as acetone, gasoline, benzene, alcohol, carbon tetrachloride, or lacquer thinner. These can scratch the surface and/or weaken it causing small surface cracks called, “crazing.”</p>",
                            ContentImageS7 = "Acrylic",
                            ContentTitle = "Acrylic",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1734),
                            DisplayName = "Acrylic",
                            IamgeUrl = "https://theodorealexander.sirv.com/website/Frontend/Live/assests/furniture-care/wood.jpg",
                            IsActive = true,
                            Name = "Acrylic",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 18,
                            ContentBody = "<p>Coasters should be used under all glasses, particularly those with alcohol or citrus content. Avoid placing hot items directly on the surface. Trivets or mats should be used under hot dishes and placemats under china, ceramics, silver or other objects that could scratch the surface. Many common foods and drinks that contain acids can etch or dull the surface.</p><ul><li>Clean surfaces with a few drops of neutral cleaner, or a mild liquid dishwashing detergent and warm water. Use a clean soft cloth for best results. Excessive cleaner or soap could leave a film and cause streaks. Thoroughly wipe surface with a water dampened soft cloth to remove any remaining soap. Avoid the use of scouring powders or creams; these abrasives will scratch the surface. Do not use products that contain lemon, vinegar, or other acids or bleach.</li></ul>",
                            ContentImageS7 = "COMPOSITE",
                            ContentTitle = "COMPOSITE",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1794),
                            DisplayName = "COMPOSITE",
                            IamgeUrl = "https://theodorealexander.sirv.com/website/Frontend/Live/assests/furniture-care/wood.jpg",
                            IsActive = true,
                            Name = "COMPOSITE",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 19,
                            ContentBody = "<p>Clean with a damp, clean cloth. Avoid using cleansers with a highly acidic base or ones that are extremely abrasive. Cleaners formulated with bleach can also damage eggshell pieces, particularly those with a polished or coated finish.</p>",
                            ContentImageS7 = "Eggshell",
                            ContentTitle = "Eggshell",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1817),
                            DisplayName = "Eggshell",
                            IamgeUrl = "https://theodorealexander.sirv.com/website/Frontend/Live/assests/furniture-care/wood.jpg",
                            IsActive = true,
                            Name = "Eggshell",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 20,
                            ContentBody = "<p>Regularly dust and wipe clean with a good quality furniture polish twice each month. Avoid using soap and water or any water-based cleaning products on aluminum as this may cause tarnishing.</p>",
                            ContentImageS7 = "Aluminium",
                            ContentTitle = "Aluminium",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1838),
                            DisplayName = "Aluminium",
                            IamgeUrl = "https://theodorealexander.sirv.com/website/Frontend/Live/assests/furniture-care/wood.jpg",
                            IsActive = true,
                            Name = "Aluminium",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 21,
                            ContentBody = "<p>Regularly dust and wipe clean with a good quality furniture polish twice each month. Avoid using soap and water or any water-based cleaning products on steel as this may cause rusting.</p>",
                            ContentImageS7 = "Steel",
                            ContentTitle = "Steel",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1861),
                            DisplayName = "Steel",
                            IamgeUrl = "https://theodorealexander.sirv.com/website/Frontend/Live/assests/furniture-care/wood.jpg",
                            IsActive = true,
                            Name = "Steel",
                            SortOrder = 10
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnonymousId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FulfillingWarehouseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Carts", (string)null);
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("RegionCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems", (string)null);
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.Collection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsCarousel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDescription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsLogo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("LifeStyleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("MetaKeyword")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IsActive");

                    b.HasIndex("Slug", "IsActive")
                        .IsUnique();

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("Slug", "IsActive"), new[] { "Name", "Description", "SortOrder", "MetaKeyword", "MetaDescription", "IsDescription", "IsLogo", "IsCarousel", "LifeStyleId" });

                    b.ToTable("Collections", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(5836),
                            Description = "From New York City to Hangzhou, China, Alexa Hampton’s project portfolio encompasses luxe, beautifully layered urban apartments, expansive town and country residences, private airplanes, and yachts. Regularly named to Architectural Digest’s AD100 and House Beautiful’s Top Designer list as well as Elle Décor’s A-List, Hampton translates the classical principles of good design and decoration into some of today’s most elegant, enduring, and functional domestic landscapes.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Alexa Hampton",
                            Slug = "the-alexa-hampton-collection",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(5872),
                            Description = "The Iconic Collection makes careful use of rich materials and elevated forms for a discerning aesthetic that emphasizes luxury and eclectic refinement. Bronze outlines, asymmetric surfaces, sumptuous tufting, and bold, textural bases are beautifully concluded in an Icon Bronze finish.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Althorp Living History",
                            Slug = "althorp-living-history",
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(5890),
                            Description = "The histories of the Spencer Family’s Heritage and Althorp are so tightly entwined that they would be impossible to unravel and separate. These Spencer ancestors were able to indulge their tastes – to commission art, furniture, and all the finer things in life. You can see the Spencer touch in every corner of Althorp – this historic house that my family has called “home” for over 500 years, and which for the past decade, has been given unprecedented care and attention.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Althorp - Victory Oak",
                            Slug = "althorp--victory-oak",
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(5908),
                            Description = "A modern view of transitional luxe, Balboa creates an air of timeless elegance that blends seamlessly with today’s contemporary style. Simplistic forms and clean architectural lines, influenced by the works of George Hepplewhite, are paired with reeded carvings as a nod to the French Provincial aesthetic. Oak wood in a Coastal Grey finish is complemented with reeding and Dark Nickel.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Balboa",
                            Slug = "balboa",
                            SortOrder = 40
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(5930),
                            Description = "Organic modern forms are boldly reimagined in Breeze. Across the collection, a striking elegance is conveyed through faceted angles, beveled profiles, sunburst veneers, and unique Dark Sterling hardware. Using a handcrafted wire-brushed pine, each piece is then perfectly finished in a light and subdued Sea Salt. ",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Breeze",
                            Slug = "breeze-collection",
                            SortOrder = 50
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(5965),
                            Description = "In the Brooksby Collection, classical forms enjoy a refined simplicity across hand-carved motifs, saber legs, and traditional European silhouettes. Beautifully crafted from mahogany and cerejeira veneer for a distinguished elegance. ",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Brooksby",
                            Slug = "brooksby",
                            SortOrder = 60
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(5995),
                            Description = "The Castle Bromwich collection exudes a polished sophistication in pieces that carefully reflect a classical influence. Gracefully showcasing the refined elegance of traditional forms, antiqued mahogany is exquisitely shaped with pedestal bases, turnings, and scroll carvings. ",
                            IsActive = true,
                            IsCarousel = false,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Castle Bromwich",
                            Slug = "castle-bromwich",
                            SortOrder = 70
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6039),
                            Description = "Drawing inspiration from organic silhouettes and centered by the beauty of ash, a refined minimalism brings attention toward highly textural forms, rich grains, and porous stones. Perfectly hand-finished in a choice of Dune or Earth. ",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Catalina",
                            Slug = "catalina",
                            SortOrder = 80
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6058),
                            Description = "The Dorchester Collection is an accomplished reimagining of early 20th century design. Pairing decorative ornamentation with masterfully sculpted forms, handcrafted silhouettes lend themselves to a refined and sumptuous presence across swooping curves, tapered lines, and modern profiles.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Dorchester",
                            Slug = "dorchester",
                            SortOrder = 90
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6077),
                            Description = "The Echoes Collection is a material story of oak wood, intricate parquetry and hand-cast aluminum, plus distressed leather and Belgian linens with widely spaced nailhead to soften the look. Our specially calibrated industrial chic finishes are weathered and dry, but full of tactile appeal and vivacity.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Echoes",
                            Slug = "the-echoes-collection",
                            SortOrder = 100
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6096),
                            Description = "The Essence collection is composed from an alluring blend of rich materials and imaginative forms. Tasteful, softened lines are gracefully juxtaposed by organic shapes and highly textural silhouettes. Compellingly crafted from white oak and hand-finished in a choice of Blonde or Opal. ",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Essence",
                            Slug = "essence-collection",
                            SortOrder = 110
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6129),
                            Description = "The gracefully rounded forms of  the Horizon collection paired with  the fine reeded details of these oak  designs provide airy silhouettes that  are ideal for laid back contemporary  living. The Horizon collection is  offered in a light Day finish ensuring  a sleek finish, clean lines, versatility  and elegance to spare.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Horizon",
                            Slug = "horizon",
                            SortOrder = 120
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6173),
                            Description = "Luxurious upholstered pieces pair elegantly with rich maple veneers and contrasting metal accents in Theodore Alexander’s Hudson Collection. A curated assortment of exquisite designs, the feeling of Art Deco luxury follows muted burl finished in exquisite maple grey with polished stainless-steel accents. From contrasting maple drawers to white marble tops, the Hudson Collection places an emphasis on sleek and modern sophistication. Finished in Pebble Grey with stainless steel hardware.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Hudson",
                            Slug = "hudson-collection",
                            SortOrder = 130
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6192),
                            Description = "Luxurious materials and unparalleled craftsmanship form a bold complexity in the Isola collection. Pieces enjoy a varied aesthetic that centers on geometric shapes in the form of chevron relief, nested squares, and asymmetrical patterns. Finished in a choice of Gowan or Charteris. ",
                            IsActive = true,
                            IsCarousel = false,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Isola",
                            Slug = "the-isola-collection",
                            SortOrder = 140
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6211),
                            Description = "Immerse yourself in the opulent world of Judith Leiber Couture with our inaugural collection, a showcase of indulgent sophistication that pays homage to the iconic aesthetic of the revered fashion designer. Each piece is a creative masterpiece, adorned with resplendent details such as mother-of-pearl encrusted inlays, meticulously hand-painted details, and polished brass accents. Presented in the exquisite Mink or Martini oak finishes, these luxurious statement pieces, mirroring the essence of the brand’s iconic handbags, are tailored to individuals who embrace an elegant approach to life.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Judith Leiber Couture",
                            Slug = "judith-leiber-couture",
                            SortOrder = 150
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6230),
                            Description = "The Kesden Collection tells a story that begins with the depth and richness of Theodore Alexander’s veneers and ends with clean and transitional lines that promote gorgeous finishes and metal accents. The Kesden Collection possesses a feeling of effortless sophistication. With graceful silhouettes and gentle figures, Kesden is a harmonious blend of organic, sculpted bamboo forms and contrasting marbles, metals and veneers. From exquisite legs in bronze to Tamo ash burl tops, each piece serves as functional art for the home.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Kesden",
                            Slug = "kesden-collection",
                            SortOrder = 160
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6247),
                            Description = "A modern view of transitional luxe, Lido creates an air of timeless elegance that blends seamlessly with today’s contemporary style. Simplistic forms and clean architectural lines, influenced by the works of George Hepplewhite, are paired with reeded carvings as a nod to the French Provincial aesthetic. Figured Prima Vera and Beech, featured in our dark Bistre finish, is complimented by a beautifully honed Crema Marfil marble stone top. Lido’s custom forged hardware adds an alluring air of sophistication in a dark rubbed bronze finish, echoing the reeding details throughout.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "LIDO",
                            Slug = "lido-collection",
                            SortOrder = 170
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6266),
                            Description = "A tease between understated glamor  and coastal ease, the Luna collection’s  gentle round edges and stylish  silhouettes infuse contemporary comfort  in two colorways: dark Palmer and  light Cascade. This collection’s suite of  thoughtfully designed oak furnishings  adapts to a wide range of settings from  seaside estate to bustling city lofts and  everything in between.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Luna",
                            Slug = "luna",
                            SortOrder = 180
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6283),
                            Description = "Taking cues from sophistication of  simplicity, the Maxwell collection’s pared  down shapes make way for its textural  shagreen surfaces. Available in Obsidian  and Cashmere finishes, this handsome  collection of oak furnishings is versatile  and sculptural while delivering an elevated  and modern air to the spaces they inhabit.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Maxwell",
                            Slug = "maxwell",
                            SortOrder = 190
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6299),
                            Description = "The Montauk collection is a seamlessly  crafted ensemble of transitional  wooden case goods that effortlessly  blends contemporary design with  timeless elegance. The finishes  options enhance the organic appeal  of this offering, while the clean lines  and subtle detailing lend a modern  touch to the furniture. Available in  a bold Jetty and soft Lighthouse  colorway this collection’s chameleon  ability to morph between aesthetics  solidifies its heirloom qualities that will  stand the test of time.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Montauk",
                            Slug = "montauk",
                            SortOrder = 200
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6356),
                            Description = "Morning Room",
                            IsActive = true,
                            IsCarousel = false,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Morning Room",
                            Slug = "morning-room",
                            SortOrder = 210
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6376),
                            Description = "Refined and minimal, a feeling of subdued elegance surrounds the NOVA collection. Pleasing details of hand-carved starburst and herringbone parquetry, rustic oak, and verde bronzed hardware add to the quiet simplicity. Beautifully finished in a choice of Dawn or Dusk. ",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "NOVA",
                            Slug = "nova-collection",
                            SortOrder = 220
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6395),
                            Description = "Inspired by an appreciation of Art Deco and Streamline Moderne, the sketches of Paul Maitland-Smith are reimagined in Origins. Long, low profiles, limited ornamentation, and attenuated forms embody the spirit of the collection, while the pieces themselves offer a sense of forward movement that can be both seen and felt.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Origins",
                            Slug = "origins",
                            SortOrder = 230
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6412),
                            Description = "Elevated by a carefully sculpted minimalism, the Repose collection beautifully plays sinuous curves against distinctly shaped forms in a relaxed palette of soothing neutrals. Wire-brushed white oak is elegantly finished in a choice of Charcoal Oak or Grey Oak. ",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Repose",
                            Slug = "repose",
                            SortOrder = 240
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6429),
                            Description = "The Rome collection is expanded  beyond tables this spring,  translating its organic, slender  framework into wood. The warmth  of the oak paired with graceful  curves creates sculptural pieces that  are offered in a rich Nera finish.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Rome",
                            Slug = "rome",
                            SortOrder = 250
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6474),
                            Description = "Seated",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Seated",
                            Slug = "seated",
                            SortOrder = 260
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6505),
                            Description = "A contemporary reinterpretation of designs from the 18th and 19th centuries, the Sloane Collection is a refined homage to the American Federal era and its English influences. Artisanal craftsmanship brings to life the balanced forms and pleasing silhouettes, while resplendent materials elegantly complete the pieces.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Sloane",
                            Slug = "sloane",
                            SortOrder = 270
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6540),
                            Description = "Marrying styles of Lord Spencer’s London home  with the exquisite capabilities of Theodore  Alexander’s craftsmanship, the Spencer London  collection brings fresh perspective to elegant  metro living. A consistent thread of chic,  mixed metal inlays are seen throughout the  furniture forms, bringing England’s rich history  to a current day contemporary style. Crafted  in figured sycamore, maple, and khaya crotch  wood, these designs have been painstakingly  fine tuned to offer a tailored product that is  uncompromising, timeless and approachable.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Spencer London",
                            Slug = "spencer-london",
                            SortOrder = 280
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6558),
                            Description = "A striking capsule collection, Spencer St. James is made of oak and adorned with crocodile-embossed leather, creating textural, statement-making experiences within the home. Available in a light Argento finish or a dark Onyx finish, the Spencer St. James collection blends contemporary flair with exquisite creativity and luxury details. These focal points elevate modern living spaces, whether hosting guests around sleek occasional tables or pouring spirits from its low-profile bar that has a colorful element of surprise inside.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Spencer ST. James",
                            Slug = "spencer-st-james",
                            SortOrder = 290
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6581),
                            Description = "Stephen Church is a Master Cabinetmaker who designs as well as crafts fine furniture following the tradition of English 18th century cabinet makers from Adam and Chippendale to Hepplewhite and Sheraton. Today those traditions are maintained with pride by a selected team of craftsmen working at Theodore Alexander.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Stephen Church",
                            Slug = "the-stephen-church-collection",
                            SortOrder = 300
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6602),
                            Description = "The Iconic Collection makes careful use of rich materials and elevated forms for a discerning aesthetic that emphasizes luxury and eclectic refinement. Bronze outlines, asymmetric surfaces, sumptuous tufting, and bold, textural bases are beautifully concluded in an Icon Bronze finish.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Surrey",
                            Slug = "surrey",
                            SortOrder = 310
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6620),
                            Description = "TA Artistry",
                            IsActive = true,
                            IsCarousel = false,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "TA Artistry",
                            Slug = "ta-artistry",
                            SortOrder = 320
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6638),
                            Description = "Rich, one-of-a-kind forms handcrafted in the finest materials and finishes. The TA Originals Collection brings artistic visions to life.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "TA Originals",
                            Slug = "ta-originals",
                            SortOrder = 330
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6657),
                            Description = "TA Studio is an elegant, highly polished presentation of luxurious forms. Rich details of metallic accents, embossed shagreen leather wrappings, and superb finishes offer a sense of refinement atop designs composed from crisp angles, soft curves, and tapered silhouettes. ",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "TA Studio",
                            Slug = "ta-studio",
                            SortOrder = 340
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6675),
                            Description = "Inspired by the “Golden Age” of French Decorative Art, the Tavel collection gracefully echoes the intricate details and masterful craftsmanship of the late 18th century. Hand-carved motifs, saber legs, molded cornices, and serpentine drawers are exquisitely formed from beech, walnut, and oak woods. Finished in a refined selection of Avesta, Nora, and Elsa.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Tavel",
                            Slug = "the-tavel-collection",
                            SortOrder = 350
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6692),
                            Description = "The Theodore Alexander brand is synonymous with innovative designs that speak to today's lifestyles in ways that excite and entice. Theodore Alexander Upholstery is created with uncompromising standards and attention to detail.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Upholstery",
                            Slug = "upholstery",
                            SortOrder = 360
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6709),
                            Description = "Introducing a symphony of form and function that  harmoniously blends diverse materials to elevate your  living spaces. From elegant bookends to captivating  sculptures, each piece in this collection is meticulously  crafted to enhance your home decor.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Accessories",
                            Slug = "accessories",
                            SortOrder = 370
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6726),
                            Description = "Embracing a contemporary, casual aesthetic, the Urbane collection is a fashion forward collection made of wire-brushed pine. The legs are designed to create an eye-catching floating appearance, while its long, slender hardware is inspired by the texture of lizard skin. The Urbane collection debuts in two refined finishes: Campfire and Sundew. From bedrooms to dining rooms, each piece delivers a minimalist charm and artisanal warmth.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Urbane",
                            Slug = "urbane",
                            SortOrder = 380
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6744),
                            Description = "Introducing ART by TA, an exclusive collection of unique, curated wall art that adds a finishing touch to every space.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Art by TA",
                            Slug = "art-by-ta",
                            SortOrder = 390
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6761),
                            Description = "Introducing the “TA Illuminations” Lighting Collection by  Theodore Alexander – where artistry meets illumination.  This curated collection celebrates the interplay of  materials, styles, and sizes, creating a symphony of light  that transforms any space into a captivating haven.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "TA Illuminations",
                            Slug = "ta-illuminations",
                            SortOrder = 400
                        },
                        new
                        {
                            Id = 41,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6779),
                            Description = "Defying style boundaries, the Floored Collection encompasses our carefully curated portfolio of designs, offerings rugs with a variety of dimensions to fit the aesthetic of any room.</br>Choosing a hand-woven or hand-knotted rug within our Stocked Collection allows for fulfillment along a convenient quick-ship timeline, perfect for projects with tight turnaround times. Love a Stocked design but need a custom size? Pieces within Floored’s Stocked program can also be crafted to suit alternative sizing requirements, extending the production timeline but offering the same gorgeous designs to perfectly fit unique spaces.</br>Bespoke spaces often call for custom-tailored floor coverings, and Floored’s Custom Collection provides solutions for rooms requiring that personal touch. Floored’s Custom Rugs are hand tufted and hand woven with Axminster and Hand Loomed constructions, offering an extensive assortment of options for color, pattern, style, sizing and more.",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "Floored",
                            Slug = "floored",
                            SortOrder = 410
                        },
                        new
                        {
                            Id = 42,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6796),
                            Description = "THEO by Theodore Alexander",
                            IsActive = true,
                            IsCarousel = true,
                            IsDescription = false,
                            IsLogo = false,
                            LifeStyleId = 0,
                            Name = "THEO by Theodore Alexander",
                            Slug = "theo-by-theodore-alexander",
                            SortOrder = 420
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.CollectionImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CollectionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("ImageType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CollectionImages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CollectionId = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6869),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-alexa-hampton-collection/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 2,
                            CollectionId = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6896),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-alexa-hampton-collection/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 3,
                            CollectionId = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6918),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-alexa-hampton-collection/3.jpg",
                            IsActive = true,
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 4,
                            CollectionId = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6939),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-alexa-hampton-collection/4.jpg",
                            IsActive = true,
                            SortOrder = 40
                        },
                        new
                        {
                            Id = 5,
                            CollectionId = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6960),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-alexa-hampton-collection/5.jpg",
                            IsActive = true,
                            SortOrder = 50
                        },
                        new
                        {
                            Id = 6,
                            CollectionId = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(6984),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-alexa-hampton-collection/6.jpg",
                            IsActive = true,
                            SortOrder = 60
                        },
                        new
                        {
                            Id = 7,
                            CollectionId = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7005),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-alexa-hampton-collection/7.jpg",
                            IsActive = true,
                            SortOrder = 70
                        },
                        new
                        {
                            Id = 8,
                            CollectionId = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7026),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-alexa-hampton-collection/8.jpg",
                            IsActive = true,
                            SortOrder = 80
                        },
                        new
                        {
                            Id = 9,
                            CollectionId = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7048),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-alexa-hampton-collection/9.jpg",
                            IsActive = true,
                            SortOrder = 90
                        },
                        new
                        {
                            Id = 10,
                            CollectionId = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7071),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-alexa-hampton-collection/10.jpg",
                            IsActive = true,
                            SortOrder = 100
                        },
                        new
                        {
                            Id = 11,
                            CollectionId = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7092),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-alexa-hampton-collection/11.jpg",
                            IsActive = true,
                            SortOrder = 110
                        },
                        new
                        {
                            Id = 12,
                            CollectionId = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7114),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-alexa-hampton-collection/12.jpg",
                            IsActive = true,
                            SortOrder = 120
                        },
                        new
                        {
                            Id = 13,
                            CollectionId = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7135),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-alexa-hampton-collection/13.jpg",
                            IsActive = true,
                            SortOrder = 130
                        },
                        new
                        {
                            Id = 14,
                            CollectionId = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7158),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-alexa-hampton-collection/14.jpg",
                            IsActive = true,
                            SortOrder = 140
                        },
                        new
                        {
                            Id = 15,
                            CollectionId = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7179),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-alexa-hampton-collection/15.jpg",
                            IsActive = true,
                            SortOrder = 150
                        },
                        new
                        {
                            Id = 16,
                            CollectionId = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7202),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-alexa-hampton-collection/16.jpg",
                            IsActive = true,
                            SortOrder = 160
                        },
                        new
                        {
                            Id = 17,
                            CollectionId = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7224),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-alexa-hampton-collection/17.jpg",
                            IsActive = true,
                            SortOrder = 170
                        },
                        new
                        {
                            Id = 18,
                            CollectionId = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7247),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-alexa-hampton-collection/18.jpg",
                            IsActive = true,
                            SortOrder = 180
                        },
                        new
                        {
                            Id = 19,
                            CollectionId = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7268),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/althorp-living-history/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 20,
                            CollectionId = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7291),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/althorp-living-history/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 21,
                            CollectionId = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7314),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/althorp-living-history/3.jpg",
                            IsActive = true,
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 22,
                            CollectionId = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7335),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/althorp-living-history/4.jpg",
                            IsActive = true,
                            SortOrder = 40
                        },
                        new
                        {
                            Id = 23,
                            CollectionId = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7358),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/althorp-living-history/5.jpg",
                            IsActive = true,
                            SortOrder = 50
                        },
                        new
                        {
                            Id = 24,
                            CollectionId = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7379),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/althorp-living-history/6.jpg",
                            IsActive = true,
                            SortOrder = 60
                        },
                        new
                        {
                            Id = 25,
                            CollectionId = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7424),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/althorp-living-history/7.jpg",
                            IsActive = true,
                            SortOrder = 70
                        },
                        new
                        {
                            Id = 26,
                            CollectionId = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7448),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/althorp-living-history/8.jpg",
                            IsActive = true,
                            SortOrder = 80
                        },
                        new
                        {
                            Id = 27,
                            CollectionId = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7469),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/althorp-living-history/9.jpg",
                            IsActive = true,
                            SortOrder = 90
                        },
                        new
                        {
                            Id = 28,
                            CollectionId = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7491),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/althorp-living-history/10.jpg",
                            IsActive = true,
                            SortOrder = 100
                        },
                        new
                        {
                            Id = 29,
                            CollectionId = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7513),
                            ImageType = 1,
                            ImageUrl = "https://theodorealexander.sirv.com/Videos/Althorp%20for%20website_Collection%20banner_with_captions.mp4",
                            IsActive = true,
                            SortOrder = 110
                        },
                        new
                        {
                            Id = 30,
                            CollectionId = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7535),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/althorp--victory-oak/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 31,
                            CollectionId = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7557),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/althorp--victory-oak/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 32,
                            CollectionId = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7579),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/althorp--victory-oak/3.jpg",
                            IsActive = true,
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 33,
                            CollectionId = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7601),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/althorp--victory-oak/4.jpg",
                            IsActive = true,
                            SortOrder = 40
                        },
                        new
                        {
                            Id = 34,
                            CollectionId = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7623),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/althorp--victory-oak/5.jpg",
                            IsActive = true,
                            SortOrder = 50
                        },
                        new
                        {
                            Id = 35,
                            CollectionId = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7646),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/althorp--victory-oak/6.jpg",
                            IsActive = true,
                            SortOrder = 60
                        },
                        new
                        {
                            Id = 36,
                            CollectionId = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7667),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/althorp--victory-oak/7.jpg",
                            IsActive = true,
                            SortOrder = 70
                        },
                        new
                        {
                            Id = 37,
                            CollectionId = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7689),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/althorp--victory-oak/8.jpg",
                            IsActive = true,
                            SortOrder = 80
                        },
                        new
                        {
                            Id = 38,
                            CollectionId = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7710),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/althorp--victory-oak/9.jpg",
                            IsActive = true,
                            SortOrder = 90
                        },
                        new
                        {
                            Id = 39,
                            CollectionId = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7732),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/althorp--victory-oak/10.jpg",
                            IsActive = true,
                            SortOrder = 100
                        },
                        new
                        {
                            Id = 40,
                            CollectionId = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7754),
                            ImageType = 1,
                            ImageUrl = "https://theodorealexander.sirv.com/Videos/Althorp%20for%20website_Collection%20banner_with_captions.mp4",
                            IsActive = true,
                            SortOrder = 110
                        },
                        new
                        {
                            Id = 41,
                            CollectionId = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7775),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/balboa/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 42,
                            CollectionId = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7797),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/balboa/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 43,
                            CollectionId = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7818),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/balboa/3.jpg",
                            IsActive = true,
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 44,
                            CollectionId = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7841),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/balboa/4.jpg",
                            IsActive = true,
                            SortOrder = 40
                        },
                        new
                        {
                            Id = 45,
                            CollectionId = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7863),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/balboa/5.jpg",
                            IsActive = true,
                            SortOrder = 50
                        },
                        new
                        {
                            Id = 46,
                            CollectionId = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7884),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/balboa/6.jpg",
                            IsActive = true,
                            SortOrder = 60
                        },
                        new
                        {
                            Id = 47,
                            CollectionId = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(7906),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/balboa/7.jpg",
                            IsActive = true,
                            SortOrder = 70
                        },
                        new
                        {
                            Id = 48,
                            CollectionId = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8014),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/balboa/8.jpg",
                            IsActive = true,
                            SortOrder = 80
                        },
                        new
                        {
                            Id = 49,
                            CollectionId = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8039),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/balboa/9.jpg",
                            IsActive = true,
                            SortOrder = 90
                        },
                        new
                        {
                            Id = 50,
                            CollectionId = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8060),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/balboa/10.jpg",
                            IsActive = true,
                            SortOrder = 100
                        },
                        new
                        {
                            Id = 51,
                            CollectionId = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8082),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/balboa/11.jpg",
                            IsActive = true,
                            SortOrder = 110
                        },
                        new
                        {
                            Id = 52,
                            CollectionId = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8104),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/balboa/12.jpg",
                            IsActive = true,
                            SortOrder = 120
                        },
                        new
                        {
                            Id = 53,
                            CollectionId = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8126),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/balboa/13.jpg",
                            IsActive = true,
                            SortOrder = 130
                        },
                        new
                        {
                            Id = 54,
                            CollectionId = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8148),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/balboa/14.jpg",
                            IsActive = true,
                            SortOrder = 140
                        },
                        new
                        {
                            Id = 55,
                            CollectionId = 5,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8170),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/breeze-collection/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 56,
                            CollectionId = 5,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8191),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/breeze-collection/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 57,
                            CollectionId = 5,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8214),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/breeze-collection/3.jpg",
                            IsActive = true,
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 58,
                            CollectionId = 5,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8235),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/breeze-collection/4.jpg",
                            IsActive = true,
                            SortOrder = 40
                        },
                        new
                        {
                            Id = 59,
                            CollectionId = 5,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8256),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/breeze-collection/5.jpg",
                            IsActive = true,
                            SortOrder = 50
                        },
                        new
                        {
                            Id = 60,
                            CollectionId = 6,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8277),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/brooksby/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 61,
                            CollectionId = 8,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8299),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/catalina/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 62,
                            CollectionId = 8,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8321),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/catalina/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 63,
                            CollectionId = 8,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8344),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/catalina/3.jpg",
                            IsActive = true,
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 64,
                            CollectionId = 8,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8366),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/catalina/4.jpg",
                            IsActive = true,
                            SortOrder = 40
                        },
                        new
                        {
                            Id = 65,
                            CollectionId = 8,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8388),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/catalina/5.jpg",
                            IsActive = true,
                            SortOrder = 50
                        },
                        new
                        {
                            Id = 66,
                            CollectionId = 8,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8411),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/catalina/6.jpg",
                            IsActive = true,
                            SortOrder = 60
                        },
                        new
                        {
                            Id = 67,
                            CollectionId = 8,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8432),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/catalina/7.jpg",
                            IsActive = true,
                            SortOrder = 70
                        },
                        new
                        {
                            Id = 68,
                            CollectionId = 8,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8454),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/catalina/8.jpg",
                            IsActive = true,
                            SortOrder = 80
                        },
                        new
                        {
                            Id = 69,
                            CollectionId = 8,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8476),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/catalina/9.jpg",
                            IsActive = true,
                            SortOrder = 90
                        },
                        new
                        {
                            Id = 70,
                            CollectionId = 9,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8547),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/dorchester/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 71,
                            CollectionId = 9,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8571),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/dorchester/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 72,
                            CollectionId = 9,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8593),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/dorchester/3.jpg",
                            IsActive = true,
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 73,
                            CollectionId = 9,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8615),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/dorchester/4.jpg",
                            IsActive = true,
                            SortOrder = 40
                        },
                        new
                        {
                            Id = 74,
                            CollectionId = 9,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8637),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/dorchester/5.jpg",
                            IsActive = true,
                            SortOrder = 50
                        },
                        new
                        {
                            Id = 75,
                            CollectionId = 10,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8658),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-echoes-collection/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 76,
                            CollectionId = 10,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8680),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-echoes-collection/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 77,
                            CollectionId = 10,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8701),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-echoes-collection/3.jpg",
                            IsActive = true,
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 78,
                            CollectionId = 10,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8725),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-echoes-collection/4.jpg",
                            IsActive = true,
                            SortOrder = 40
                        },
                        new
                        {
                            Id = 79,
                            CollectionId = 10,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8747),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-echoes-collection/5.jpg",
                            IsActive = true,
                            SortOrder = 50
                        },
                        new
                        {
                            Id = 80,
                            CollectionId = 10,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8768),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-echoes-collection/6.jpg",
                            IsActive = true,
                            SortOrder = 60
                        },
                        new
                        {
                            Id = 81,
                            CollectionId = 11,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8789),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/essence-collection/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 82,
                            CollectionId = 11,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8811),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/essence-collection/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 83,
                            CollectionId = 11,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8832),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/essence-collection/3.jpg",
                            IsActive = true,
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 84,
                            CollectionId = 11,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8853),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/essence-collection/4.jpg",
                            IsActive = true,
                            SortOrder = 40
                        },
                        new
                        {
                            Id = 85,
                            CollectionId = 11,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8875),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/essence-collection/5.jpg",
                            IsActive = true,
                            SortOrder = 50
                        },
                        new
                        {
                            Id = 86,
                            CollectionId = 11,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8896),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/essence-collection/6.jpg",
                            IsActive = true,
                            SortOrder = 60
                        },
                        new
                        {
                            Id = 87,
                            CollectionId = 12,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8918),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/horizon/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 88,
                            CollectionId = 13,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8939),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/hudson-collection/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 89,
                            CollectionId = 13,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8961),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/hudson-collection/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 90,
                            CollectionId = 13,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(8982),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/hudson-collection/3.jpg",
                            IsActive = true,
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 91,
                            CollectionId = 13,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9004),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/hudson-collection/4.jpg",
                            IsActive = true,
                            SortOrder = 40
                        },
                        new
                        {
                            Id = 92,
                            CollectionId = 15,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9026),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/judith-leiber-couture/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 93,
                            CollectionId = 15,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9047),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/judith-leiber-couture/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 94,
                            CollectionId = 16,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9069),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/kesden-collection/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 95,
                            CollectionId = 16,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9090),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/kesden-collection/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 96,
                            CollectionId = 16,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9149),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/kesden-collection/3.jpg",
                            IsActive = true,
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 97,
                            CollectionId = 17,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9173),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/lido-collection/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 98,
                            CollectionId = 17,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9195),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/lido-collection/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 99,
                            CollectionId = 17,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9216),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/lido-collection/3.jpg",
                            IsActive = true,
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 100,
                            CollectionId = 17,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9238),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/lido-collection/4.jpg",
                            IsActive = true,
                            SortOrder = 40
                        },
                        new
                        {
                            Id = 101,
                            CollectionId = 17,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9259),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/lido-collection/5.jpg",
                            IsActive = true,
                            SortOrder = 50
                        },
                        new
                        {
                            Id = 102,
                            CollectionId = 18,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9280),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/luna/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 103,
                            CollectionId = 19,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9300),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/maxwell/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 104,
                            CollectionId = 19,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9321),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/maxwell/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 105,
                            CollectionId = 19,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9344),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/maxwell/3.jpg",
                            IsActive = true,
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 106,
                            CollectionId = 20,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9366),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/montauk/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 107,
                            CollectionId = 22,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9388),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/nova-collection/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 108,
                            CollectionId = 22,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9409),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/nova-collection/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 109,
                            CollectionId = 22,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9431),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/nova-collection/3.jpg",
                            IsActive = true,
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 110,
                            CollectionId = 22,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9452),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/nova-collection/4.jpg",
                            IsActive = true,
                            SortOrder = 40
                        },
                        new
                        {
                            Id = 111,
                            CollectionId = 22,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9474),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/nova-collection/5.jpg",
                            IsActive = true,
                            SortOrder = 50
                        },
                        new
                        {
                            Id = 112,
                            CollectionId = 22,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9496),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/nova-collection/6.jpg",
                            IsActive = true,
                            SortOrder = 60
                        },
                        new
                        {
                            Id = 113,
                            CollectionId = 23,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9518),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/origins/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 114,
                            CollectionId = 23,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9539),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/origins/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 115,
                            CollectionId = 23,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9560),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/origins/3.jpg",
                            IsActive = true,
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 116,
                            CollectionId = 23,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9582),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/origins/4.jpg",
                            IsActive = true,
                            SortOrder = 40
                        },
                        new
                        {
                            Id = 117,
                            CollectionId = 23,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9603),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/origins/5.jpg",
                            IsActive = true,
                            SortOrder = 50
                        },
                        new
                        {
                            Id = 118,
                            CollectionId = 23,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9624),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/origins/6.jpg",
                            IsActive = true,
                            SortOrder = 60
                        },
                        new
                        {
                            Id = 119,
                            CollectionId = 23,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9645),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/origins/7.jpg",
                            IsActive = true,
                            SortOrder = 70
                        },
                        new
                        {
                            Id = 120,
                            CollectionId = 23,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9667),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/origins/8.jpg",
                            IsActive = true,
                            SortOrder = 80
                        },
                        new
                        {
                            Id = 121,
                            CollectionId = 23,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9689),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/origins/9.jpg",
                            IsActive = true,
                            SortOrder = 90
                        },
                        new
                        {
                            Id = 122,
                            CollectionId = 23,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9748),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/origins/10.jpg",
                            IsActive = true,
                            SortOrder = 100
                        },
                        new
                        {
                            Id = 123,
                            CollectionId = 24,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9771),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/repose/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 124,
                            CollectionId = 24,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9792),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/repose/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 125,
                            CollectionId = 24,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9814),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/repose/3.jpg",
                            IsActive = true,
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 126,
                            CollectionId = 24,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9836),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/repose/4.jpg",
                            IsActive = true,
                            SortOrder = 40
                        },
                        new
                        {
                            Id = 127,
                            CollectionId = 25,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9856),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/rome/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 128,
                            CollectionId = 25,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9878),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/rome/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 129,
                            CollectionId = 25,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9899),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/rome/3.jpg",
                            IsActive = true,
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 130,
                            CollectionId = 27,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9922),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/sloane/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 131,
                            CollectionId = 27,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9944),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/sloane/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 132,
                            CollectionId = 27,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9967),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/sloane/3.jpg",
                            IsActive = true,
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 133,
                            CollectionId = 27,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 897, DateTimeKind.Utc).AddTicks(9988),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/sloane/4.jpg",
                            IsActive = true,
                            SortOrder = 40
                        },
                        new
                        {
                            Id = 134,
                            CollectionId = 27,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(10),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/sloane/5.jpg",
                            IsActive = true,
                            SortOrder = 50
                        },
                        new
                        {
                            Id = 135,
                            CollectionId = 27,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(31),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/sloane/6.jpg",
                            IsActive = true,
                            SortOrder = 60
                        },
                        new
                        {
                            Id = 136,
                            CollectionId = 27,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(52),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/sloane/7.jpg",
                            IsActive = true,
                            SortOrder = 70
                        },
                        new
                        {
                            Id = 137,
                            CollectionId = 27,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(74),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/sloane/8.jpg",
                            IsActive = true,
                            SortOrder = 80
                        },
                        new
                        {
                            Id = 138,
                            CollectionId = 27,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(96),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/sloane/9.jpg",
                            IsActive = true,
                            SortOrder = 90
                        },
                        new
                        {
                            Id = 139,
                            CollectionId = 28,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(118),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/spencer-london/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 140,
                            CollectionId = 28,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(140),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/spencer-london/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 141,
                            CollectionId = 28,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(204),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/spencer-london/3.jpg",
                            IsActive = true,
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 142,
                            CollectionId = 28,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(227),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/spencer-london/4.jpg",
                            IsActive = true,
                            SortOrder = 40
                        },
                        new
                        {
                            Id = 143,
                            CollectionId = 28,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(249),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/spencer-london/5.jpg",
                            IsActive = true,
                            SortOrder = 50
                        },
                        new
                        {
                            Id = 144,
                            CollectionId = 28,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(292),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/spencer-london/6.jpg",
                            IsActive = true,
                            SortOrder = 60
                        },
                        new
                        {
                            Id = 145,
                            CollectionId = 28,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(315),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/spencer-london/7.jpg",
                            IsActive = true,
                            SortOrder = 70
                        },
                        new
                        {
                            Id = 146,
                            CollectionId = 28,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(338),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/spencer-london/8.jpg",
                            IsActive = true,
                            SortOrder = 80
                        },
                        new
                        {
                            Id = 147,
                            CollectionId = 28,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(358),
                            ImageType = 1,
                            ImageUrl = "https://theodorealexander.sirv.com/Videos/spencer.mp4",
                            IsActive = true,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 148,
                            CollectionId = 29,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(380),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/spencer-st-james/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 149,
                            CollectionId = 30,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(403),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-stephen-church-collection/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 150,
                            CollectionId = 30,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(425),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-stephen-church-collection/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 151,
                            CollectionId = 30,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(446),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-stephen-church-collection/3.jpg",
                            IsActive = true,
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 152,
                            CollectionId = 30,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(476),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-stephen-church-collection/4.jpg",
                            IsActive = true,
                            SortOrder = 40
                        },
                        new
                        {
                            Id = 153,
                            CollectionId = 30,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(499),
                            ImageType = 1,
                            ImageUrl = "https://theodorealexander.sirv.com/Videos/Stephen_Church_with_caption.mp4",
                            IsActive = true,
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 154,
                            CollectionId = 31,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(521),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/surrey/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 155,
                            CollectionId = 31,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(559),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/surrey/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 156,
                            CollectionId = 31,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(581),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/surrey/3.jpg",
                            IsActive = true,
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 157,
                            CollectionId = 31,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(602),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/surrey/4.jpg",
                            IsActive = true,
                            SortOrder = 40
                        },
                        new
                        {
                            Id = 158,
                            CollectionId = 31,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(624),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/surrey/5.jpg",
                            IsActive = true,
                            SortOrder = 50
                        },
                        new
                        {
                            Id = 159,
                            CollectionId = 31,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(665),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/surrey/6.jpg",
                            IsActive = true,
                            SortOrder = 60
                        },
                        new
                        {
                            Id = 160,
                            CollectionId = 31,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(687),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/surrey/7.jpg",
                            IsActive = true,
                            SortOrder = 70
                        },
                        new
                        {
                            Id = 161,
                            CollectionId = 31,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(708),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/surrey/8.jpg",
                            IsActive = true,
                            SortOrder = 80
                        },
                        new
                        {
                            Id = 162,
                            CollectionId = 33,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(739),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/ta-originals/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 163,
                            CollectionId = 33,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(760),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/ta-originals/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 164,
                            CollectionId = 34,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(781),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/ta-studio/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 165,
                            CollectionId = 34,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(812),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/ta-studio/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 166,
                            CollectionId = 34,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(875),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/ta-studio/3.jpg",
                            IsActive = true,
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 167,
                            CollectionId = 34,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(908),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/ta-studio/4.jpg",
                            IsActive = true,
                            SortOrder = 40
                        },
                        new
                        {
                            Id = 168,
                            CollectionId = 34,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(931),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/ta-studio/5.jpg",
                            IsActive = true,
                            SortOrder = 50
                        },
                        new
                        {
                            Id = 169,
                            CollectionId = 34,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(953),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/ta-studio/6.jpg",
                            IsActive = true,
                            SortOrder = 60
                        },
                        new
                        {
                            Id = 170,
                            CollectionId = 35,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(983),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-tavel-collection/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 171,
                            CollectionId = 35,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1006),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-tavel-collection/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 172,
                            CollectionId = 35,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1028),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/the-tavel-collection/3.jpg",
                            IsActive = true,
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 173,
                            CollectionId = 36,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1049),
                            ImageType = 1,
                            ImageUrl = "https://theodorealexander.sirv.com/Videos/TA_Upholstery_Factory_120423_1080p_Final_Lowres.mp4",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 174,
                            CollectionId = 36,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1080),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/upholstery/1.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 175,
                            CollectionId = 37,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1102),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/accessories/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 176,
                            CollectionId = 38,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1123),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/urbane/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 177,
                            CollectionId = 38,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1147),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/urbane/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 178,
                            CollectionId = 39,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1171),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/art-by-ta/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 179,
                            CollectionId = 40,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1193),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/ta-illuminations/1.jpg",
                            IsActive = true,
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 180,
                            CollectionId = 40,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1224),
                            ImageType = 0,
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Collection/ta-illuminations/2.jpg",
                            IsActive = true,
                            SortOrder = 20
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.Coupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CouponCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<double>("DiscountAmount")
                        .HasColumnType("float");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<int>("MinAmount")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.GlobalShippingLane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("DestinationShippingZoneId")
                        .HasColumnType("int");

                    b.Property<int>("EstimatedTransitDaysMax")
                        .HasColumnType("int");

                    b.Property<int>("EstimatedTransitDaysMin")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("OriginShippingZoneId")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryCarrierPartner")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("SupportsConsolidation")
                        .HasColumnType("bit");

                    b.Property<string>("TransitMode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DestinationShippingZoneId");

                    b.HasIndex("OriginShippingZoneId");

                    b.ToTable("GlobalShippingLanes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2870),
                            DestinationShippingZoneId = 102,
                            EstimatedTransitDaysMax = 35,
                            EstimatedTransitDaysMin = 20,
                            IsActive = true,
                            Name = "VN to US West Coast (Ocean)",
                            OriginShippingZoneId = 101,
                            PrimaryCarrierPartner = "Maersk",
                            SupportsConsolidation = true,
                            TransitMode = "Ocean"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2877),
                            DestinationShippingZoneId = 102,
                            EstimatedTransitDaysMax = 10,
                            EstimatedTransitDaysMin = 5,
                            IsActive = true,
                            Name = "VN to US West Coast (Air)",
                            OriginShippingZoneId = 101,
                            PrimaryCarrierPartner = "FedEx Cargo",
                            SupportsConsolidation = false,
                            TransitMode = "Air Cargo"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2879),
                            DestinationShippingZoneId = 106,
                            EstimatedTransitDaysMax = 45,
                            EstimatedTransitDaysMin = 28,
                            IsActive = true,
                            Name = "VN to UK (Ocean)",
                            OriginShippingZoneId = 101,
                            PrimaryCarrierPartner = "CMA CGM",
                            SupportsConsolidation = true,
                            TransitMode = "Ocean"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2880),
                            DestinationShippingZoneId = 102,
                            EstimatedTransitDaysMax = 30,
                            EstimatedTransitDaysMin = 18,
                            IsActive = true,
                            Name = "CN to US West Coast (Ocean)",
                            OriginShippingZoneId = 108,
                            PrimaryCarrierPartner = "COSCO",
                            SupportsConsolidation = true,
                            TransitMode = "Ocean"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2882),
                            DestinationShippingZoneId = 111,
                            EstimatedTransitDaysMax = 7,
                            EstimatedTransitDaysMin = 3,
                            IsActive = true,
                            Name = "VN to Singapore (Ocean)",
                            OriginShippingZoneId = 101,
                            PrimaryCarrierPartner = "PIL",
                            SupportsConsolidation = true,
                            TransitMode = "Ocean"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2884),
                            DestinationShippingZoneId = 110,
                            EstimatedTransitDaysMax = 5,
                            EstimatedTransitDaysMin = 2,
                            IsActive = true,
                            Name = "Singapore to Indonesia (Ocean)",
                            OriginShippingZoneId = 111,
                            PrimaryCarrierPartner = "APL",
                            SupportsConsolidation = true,
                            TransitMode = "Ocean"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2885),
                            DestinationShippingZoneId = 109,
                            EstimatedTransitDaysMax = 25,
                            EstimatedTransitDaysMin = 15,
                            IsActive = true,
                            Name = "CN to Russia (Rail Freight)",
                            OriginShippingZoneId = 108,
                            PrimaryCarrierPartner = "CR Express",
                            SupportsConsolidation = true,
                            TransitMode = "Rail"
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.InventoryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("MinimumStockLevel")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("QuantityOnHand")
                        .HasColumnType("int");

                    b.Property<int>("QuantityReserved")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.HasIndex("ProductId", "WarehouseId")
                        .IsUnique();

                    b.ToTable("InventoryItems", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3765),
                            IsActive = true,
                            LastUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MinimumStockLevel = 5,
                            ProductId = 1,
                            QuantityOnHand = 50,
                            QuantityReserved = 10,
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3768),
                            IsActive = true,
                            LastUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MinimumStockLevel = 10,
                            ProductId = 2,
                            QuantityOnHand = 100,
                            QuantityReserved = 20,
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3769),
                            IsActive = true,
                            LastUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MinimumStockLevel = 3,
                            ProductId = 1,
                            QuantityOnHand = 30,
                            QuantityReserved = 5,
                            WarehouseId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3770),
                            IsActive = true,
                            LastUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MinimumStockLevel = 7,
                            ProductId = 2,
                            QuantityOnHand = 70,
                            QuantityReserved = 15,
                            WarehouseId = 3
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3772),
                            IsActive = true,
                            LastUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MinimumStockLevel = 2,
                            ProductId = 1,
                            QuantityOnHand = 15,
                            QuantityReserved = 3,
                            WarehouseId = 4
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3773),
                            IsActive = true,
                            LastUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MinimumStockLevel = 5,
                            ProductId = 2,
                            QuantityOnHand = 40,
                            QuantityReserved = 8,
                            WarehouseId = 4
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3774),
                            IsActive = true,
                            LastUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MinimumStockLevel = 10,
                            ProductId = 1,
                            QuantityOnHand = 80,
                            QuantityReserved = 15,
                            WarehouseId = 2
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3775),
                            IsActive = true,
                            LastUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MinimumStockLevel = 15,
                            ProductId = 2,
                            QuantityOnHand = 120,
                            QuantityReserved = 25,
                            WarehouseId = 2
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3777),
                            IsActive = true,
                            LastUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MinimumStockLevel = 20,
                            ProductId = 3,
                            QuantityOnHand = 200,
                            QuantityReserved = 50,
                            WarehouseId = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3778),
                            IsActive = true,
                            LastUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MinimumStockLevel = 15,
                            ProductId = 3,
                            QuantityOnHand = 150,
                            QuantityReserved = 30,
                            WarehouseId = 3
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3779),
                            IsActive = true,
                            LastUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MinimumStockLevel = 1,
                            ProductId = 1,
                            QuantityOnHand = 10,
                            QuantityReserved = 1,
                            WarehouseId = 5
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3780),
                            IsActive = true,
                            LastUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MinimumStockLevel = 3,
                            ProductId = 2,
                            QuantityOnHand = 25,
                            QuantityReserved = 5,
                            WarehouseId = 6
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Languages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "en",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3225),
                            IsActive = true,
                            IsDefault = true,
                            Name = "English - EN"
                        },
                        new
                        {
                            Id = 2,
                            Code = "vi",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3228),
                            IsActive = true,
                            IsDefault = false,
                            Name = "Vietnamese - VN"
                        },
                        new
                        {
                            Id = 3,
                            Code = "zh",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3229),
                            IsActive = true,
                            IsDefault = false,
                            Name = "中文 (简体) - ZH"
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.LifeStyle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("MetaKeyword")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Slug", "IsActive")
                        .IsUnique();

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("Slug", "IsActive"), new[] { "Name", "Description", "ImageUrl", "SortOrder", "MetaDescription", "MetaKeyword" });

                    b.ToTable("LifeStyles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1416),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Classic",
                            Slug = "classic",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1457),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Transitional",
                            Slug = "transitional",
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1477),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Rustic",
                            Slug = "rustic",
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1562),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Modern",
                            Slug = "modern",
                            SortOrder = 40
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1584),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Casual",
                            Slug = "casual",
                            SortOrder = 50
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("MaterialCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MaterialCategoryId");

                    b.ToTable("Materials", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2821),
                            IsActive = true,
                            MaterialCategoryId = 1,
                            Name = "Aluminium",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2841),
                            IsActive = true,
                            MaterialCategoryId = 1,
                            Name = "Brass",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2877),
                            IsActive = true,
                            MaterialCategoryId = 1,
                            Name = "Gilt Metal",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2895),
                            IsActive = true,
                            MaterialCategoryId = 1,
                            Name = "Iron",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2913),
                            IsActive = true,
                            MaterialCategoryId = 1,
                            Name = "Nickel Plated Brass",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2932),
                            IsActive = true,
                            MaterialCategoryId = 1,
                            Name = "Paktong",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2959),
                            IsActive = true,
                            MaterialCategoryId = 1,
                            Name = "Stainless Steel",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2977),
                            IsActive = true,
                            MaterialCategoryId = 1,
                            Name = "Steel",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2994),
                            IsActive = true,
                            MaterialCategoryId = 1,
                            Name = "Zinc",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(7501),
                            IsActive = true,
                            MaterialCategoryId = 2,
                            Name = "Cow Hide ",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(7611),
                            IsActive = true,
                            MaterialCategoryId = 2,
                            Name = "Embossed Leather",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(7630),
                            IsActive = true,
                            MaterialCategoryId = 2,
                            Name = "Fabric",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(7647),
                            IsActive = true,
                            MaterialCategoryId = 2,
                            Name = "Hair on Hide",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(7663),
                            IsActive = true,
                            MaterialCategoryId = 2,
                            Name = "Leather",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(7679),
                            IsActive = true,
                            MaterialCategoryId = 2,
                            Name = "Silk ",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(7696),
                            IsActive = true,
                            MaterialCategoryId = 2,
                            Name = "Suede",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(7714),
                            IsActive = true,
                            MaterialCategoryId = 2,
                            Name = "Upholstery",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(7733),
                            IsActive = true,
                            MaterialCategoryId = 3,
                            Name = "Agate",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(7749),
                            IsActive = true,
                            MaterialCategoryId = 3,
                            Name = "Alabaster",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(7766),
                            IsActive = true,
                            MaterialCategoryId = 3,
                            Name = "Amethyst",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(7782),
                            IsActive = true,
                            MaterialCategoryId = 3,
                            Name = "Carrara Marble",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(7799),
                            IsActive = true,
                            MaterialCategoryId = 3,
                            Name = "Crystal",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(7816),
                            IsActive = true,
                            MaterialCategoryId = 3,
                            Name = "Iron Pyrite",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(7832),
                            IsActive = true,
                            MaterialCategoryId = 3,
                            Name = "Jade",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(7848),
                            IsActive = true,
                            MaterialCategoryId = 3,
                            Name = "Lapis Lazuli",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(7864),
                            IsActive = true,
                            MaterialCategoryId = 3,
                            Name = "Malachite",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(7880),
                            IsActive = true,
                            MaterialCategoryId = 3,
                            Name = "Marble",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(7897),
                            IsActive = true,
                            MaterialCategoryId = 3,
                            Name = "Onyx",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(7913),
                            IsActive = true,
                            MaterialCategoryId = 3,
                            Name = "Quartz",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(7929),
                            IsActive = true,
                            MaterialCategoryId = 3,
                            Name = "Red Jasper",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(7945),
                            IsActive = true,
                            MaterialCategoryId = 3,
                            Name = "Soapstone",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(7962),
                            IsActive = true,
                            MaterialCategoryId = 3,
                            Name = "Tiger Eye",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(7978),
                            IsActive = true,
                            MaterialCategoryId = 3,
                            Name = "Travertine",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8035),
                            IsActive = true,
                            MaterialCategoryId = 3,
                            Name = "Turquoise Stone",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8053),
                            IsActive = true,
                            MaterialCategoryId = 3,
                            Name = "Variegated Black Marble",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8069),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Acacia",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8086),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Acacia Oyster Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8102),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Acacia Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8120),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Aged Oak Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8135),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Alder",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 41,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8152),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Amara Ebony Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 42,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8168),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Amara grained Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 43,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8184),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Amara Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 44,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8201),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Amarello Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 45,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8217),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Amboyna Burl",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 46,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8233),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Amboyna Burl Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 47,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8249),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Amotique Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 48,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8267),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Anagre Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 49,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8283),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Argentinean Walnut Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 50,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8300),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Ash Burl Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 51,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8316),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Ash Crown Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 52,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8332),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Ash Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 53,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8349),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Bamboo",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 54,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8366),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Beech",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 55,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8382),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Birds Eye Maple Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 56,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8399),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Block Anegre",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 57,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8415),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Bocote Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 58,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8432),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Brown Oak Burl",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 59,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8448),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Bubinga Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 60,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8502),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Cerejeira Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 61,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8519),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Cerejeria Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 62,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8536),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Cherry",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 63,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8552),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Cherry Crown Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 64,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8570),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Cherry Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 65,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8586),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Cherry Wood",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 66,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8603),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Chestnut Burl",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 67,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8620),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Chestnut Burl Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 68,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8637),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Chestnut Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 69,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8653),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Curly Maple Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 70,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8669),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Dragonwood",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 71,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8686),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Ebony Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 72,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8702),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Elm Burl Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 73,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8719),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Engineered Ebony Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 74,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8735),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Etimoe Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 75,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8751),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Fiddle Back Maple Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 76,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8768),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Fiddle Back Sycamore Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 77,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8784),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Figured Anegre Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 78,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8801),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Figured Ash Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 79,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8817),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Figured Birch",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 80,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8833),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Figured Etimoe Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 81,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8849),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Figured Eucalyptus Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 82,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8900),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Figured Makore",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 83,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8918),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Figured Ofram",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 84,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8935),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Figured Ofram Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 85,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8951),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Figured Sycamore Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 86,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8967),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Figured Walnut Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 87,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(8983),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Flame Bubinga Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 88,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9000),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Flame Figured Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 89,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9015),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Flame Mahogany",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 90,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9032),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Flame Mahogany Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 91,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9048),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Flame Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 92,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9064),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Flame Walnut",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 93,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9081),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Flame Walnut Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 94,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9097),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Fumed Figured Eucalyptus Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 95,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9113),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Fumed Mahogany Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 96,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9130),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Golden Madrone Burl Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 97,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9146),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Golden Madrone Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 98,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9162),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Granadillo Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 99,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9178),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Grey Vine Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 100,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9194),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Hickory Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 101,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9210),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Hyedua Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 102,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9226),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Imbuya Burl Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 103,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9242),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Imbuya Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 104,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9258),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Karelian Birch Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 105,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9274),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Khaya",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 106,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9290),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Khaya Crotch Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 107,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9307),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Khaya Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 108,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9361),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Lacewood Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 109,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9378),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Lati Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 110,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9395),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Laurel Burl Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 111,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9410),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Layered Hardwood",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 112,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9426),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Lenga",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 113,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9443),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Louro Preto Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 114,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9459),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Macassar Ebony Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 115,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9475),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Madrone Burl Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 116,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9492),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Mahogany",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 117,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9508),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Mahogany Swirl",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 118,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9524),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Mahogany Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 119,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9541),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Maple",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 120,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9557),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Maple Burl Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 121,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9575),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Maple Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 122,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9594),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Marbled Sapele",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 123,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9611),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Morado Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 124,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9628),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Movingue",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 125,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9644),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Movingue Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 126,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9661),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Oak",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 127,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9678),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Oak Burl Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 128,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9694),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Oak Heart Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 129,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9710),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Oak Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 130,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9765),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Ofram Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 131,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9781),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Okoume Veneer/Mop Inlay",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 132,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9798),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Okumé Crotch Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 133,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9814),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Okumé Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 134,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9831),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Olive Ash Burl Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 135,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9846),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Olive Ash Swirl Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 136,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9863),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Oyster Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 137,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9879),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Pacific walnut",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 138,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9896),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Pacific Walnut Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 139,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9912),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Paldao Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 140,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9929),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Parawood",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 141,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9946),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Parchment",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 142,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9963),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Pepperwood Burl Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 143,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9979),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Perota Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 144,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(9994),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Pine",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 145,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(10),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Pippy Oak Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 146,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(25),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Pollard Burl Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 147,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(42),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Pollard Oak Burl",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 148,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(58),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Pollard Oak Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 149,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(74),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Poplar",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 150,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(90),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Poplar Burl Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 151,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(106),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Primavera Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 152,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(143),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Quartered Etimoe Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 153,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(161),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Reclaimed Oak Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 154,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(178),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Redwood Burl Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 155,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(194),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Rosewood Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 156,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(210),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Santo Domingo Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 157,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(227),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Sapele",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 158,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(244),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Satinwood Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 159,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(260),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Simulated Amara Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 160,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(276),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Simulated Ebony Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 161,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(292),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Solid Babool",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 162,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(308),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Solid Wood",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 163,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(338),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Sucupira Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 164,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(355),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Swirl Mahogany Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 165,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(372),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Swirl Walnut Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 166,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(388),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Sycamore Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 167,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(404),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Tamo Ash Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 168,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(420),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Tamo Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 169,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(436),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Tiger Maple Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 170,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(452),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Tulip",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 171,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(468),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Tulip Wood",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 172,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(485),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Tulipifera",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 173,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(501),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 174,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(517),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Walnut",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 175,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(533),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Walnut Burl Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 176,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(549),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Walnut Crown Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 177,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(634),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Walnut Grained Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 178,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(655),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Walnut Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 179,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(673),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Waterfall Bubinga Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 180,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(688),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Wenge Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 181,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(705),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Wood",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 182,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(721),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Woven Cane",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 183,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(737),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Woven Rattan",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 184,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(754),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Yew Burl Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 185,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(771),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Yew Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 186,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(787),
                            IsActive = true,
                            MaterialCategoryId = 4,
                            Name = "Zebrano Veneer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 187,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(804),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Acrylic",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 188,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(821),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Bone",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 189,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(837),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Buffalo Horn",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 190,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(854),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Cane",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 191,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(869),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Canvas",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 192,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(886),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Ceramic",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 193,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(903),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Composite",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 194,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(919),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Découpage",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 195,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(936),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Eggshell",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 196,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(951),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Faux Bone",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 197,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(967),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Faux Horn",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 198,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(983),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Faux Shagreen",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 199,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1000),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Felt",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 200,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1016),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Fiberglass",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 201,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1033),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Glass",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 202,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1049),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Horn",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 203,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1119),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Kalahari",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 204,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1137),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Komodo",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 205,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1153),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Lacquer",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 206,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1170),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Mirror",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 207,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1187),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Mother of Pearl",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 208,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1204),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Paper",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 209,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1221),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Penshell",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 210,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1237),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Rush",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 211,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1253),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Shagreen",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 212,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1270),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Shagreen Embossed Leather",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 213,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1285),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Velvet",
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 214,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1302),
                            IsActive = true,
                            MaterialCategoryId = 5,
                            Name = "Zebra Dyed Cow Hide",
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.MaterialCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MaterialCategories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2708),
                            IsActive = true,
                            Name = "Metal"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2729),
                            IsActive = true,
                            Name = "Upholstery Materials"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2748),
                            IsActive = true,
                            Name = "Stone"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2767),
                            IsActive = true,
                            Name = "Woods"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2795),
                            IsActive = true,
                            Name = "Other Textures & Surface Treatments"
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ChosenShippingDeliveryType")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("ChosenShippingEstimatedDaysMax")
                        .HasColumnType("int");

                    b.Property<int>("ChosenShippingEstimatedDaysMin")
                        .HasColumnType("int");

                    b.Property<string>("ChosenShippingOriginWarehouseName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ChosenShippingRouteDescription")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("ChosenShippingServiceLevelName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("FulfillingWarehouseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShippingAddress1")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("ShippingAddress2")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("ShippingCity")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<decimal>("ShippingCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ShippingCountryCode")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("ShippingFirstName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("ShippingFloorNumber")
                        .HasColumnType("int");

                    b.Property<bool>("ShippingIsRuralArea")
                        .HasColumnType("bit");

                    b.Property<string>("ShippingLastName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<double>("ShippingLatitude")
                        .HasColumnType("float");

                    b.Property<double>("ShippingLongitude")
                        .HasColumnType("float");

                    b.Property<string>("ShippingPhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("ShippingStateProvince")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ShippingZipCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("Status")
                        .HasMaxLength(18)
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FulfillingWarehouseId");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems", (string)null);
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Payments", (string)null);
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalFeatures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CollectionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("DefaultImageUrl")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<decimal>("Depth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtendedDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GrossWeightKg")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GrossWeightLbs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("LifeStyleId")
                        .HasColumnType("int");

                    b.Property<int?>("MaxHeight")
                        .HasColumnType("int");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("MetaKeyword")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<decimal>("NetWeightKg")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetWeightLbs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductShippingProfileId")
                        .HasColumnType("int");

                    b.Property<int>("QuantityMultiplier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("Sku")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("StyleId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.HasIndex("LifeStyleId");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("ProductShippingProfileId");

                    b.HasIndex("RoomId");

                    b.HasIndex("StyleId");

                    b.HasIndex("TypeId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdditionalFeatures = "",
                            CollectionId = 8,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3549),
                            DefaultImageUrl = "https://theodorealexander.sirv.com/ProductphotoCrop/TA5/TA54027.C301_main_1.jpg",
                            Depth = 162.6m,
                            Description = "",
                            ExtendedDescription = "",
                            GrossWeightKg = 0m,
                            GrossWeightLbs = 0m,
                            Height = 76.2m,
                            IsActive = true,
                            LifeStyleId = 4,
                            MaxHeight = 0,
                            MetaDescription = "",
                            MetaKeyword = "",
                            Name = "Catalina Round Dining Table",
                            NetWeightKg = 91m,
                            NetWeightLbs = 0m,
                            ProductCategoryId = 101,
                            ProductShippingProfileId = 201,
                            QuantityMultiplier = 1,
                            RoomId = 2,
                            Sku = "TA54027.C301",
                            Slug = "catalina-round-dining-table-ta54027-c301",
                            StyleId = 9,
                            TypeId = 4,
                            Width = 162.6m
                        },
                        new
                        {
                            Id = 2,
                            AdditionalFeatures = "",
                            CollectionId = 8,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3559),
                            DefaultImageUrl = "https://theodorealexander.sirv.com/ProductphotoCrop/TA5/TA51059.C301_main_1.jpg",
                            Depth = 71.1m,
                            Description = "",
                            ExtendedDescription = "",
                            GrossWeightKg = 0m,
                            GrossWeightLbs = 0m,
                            Height = 41.9m,
                            IsActive = true,
                            LifeStyleId = 4,
                            MaxHeight = 0,
                            MetaDescription = "",
                            MetaKeyword = "",
                            Name = "Catalina Cocktail Table",
                            NetWeightKg = 38m,
                            NetWeightLbs = 0m,
                            ProductCategoryId = 102,
                            ProductShippingProfileId = 202,
                            QuantityMultiplier = 1,
                            RoomId = 1,
                            Sku = "TA51059.C301",
                            Slug = "catalina-cocktail-table-ta51059-c301",
                            StyleId = 9,
                            TypeId = 29,
                            Width = 122m
                        },
                        new
                        {
                            Id = 3,
                            AdditionalFeatures = "",
                            CollectionId = 8,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3564),
                            DefaultImageUrl = "https://theodorealexander.sirv.com/ProductphotoCrop/TA8/TA84012.C306_main_1.jpg",
                            Depth = 30m,
                            Description = "",
                            ExtendedDescription = "",
                            GrossWeightKg = 0m,
                            GrossWeightLbs = 0m,
                            Height = 20m,
                            IsActive = true,
                            LifeStyleId = 4,
                            MaxHeight = 0,
                            MetaDescription = "",
                            MetaKeyword = "",
                            Name = "Designer Vase",
                            NetWeightKg = 2m,
                            NetWeightLbs = 0m,
                            ProductCategoryId = 103,
                            ProductShippingProfileId = 203,
                            QuantityMultiplier = 1,
                            RoomId = 3,
                            Sku = "TA84012.C306",
                            Slug = "catalina-upholstered-california-king-bed-ta84012-c306",
                            StyleId = 9,
                            TypeId = 20,
                            Width = 20m
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ProductCare", b =>
                {
                    b.Property<int>("CareId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("CareId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCares");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<double>("DefaultDimensionalFactor")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBulky")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFragile")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("RequiresAssembly")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 101,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3699),
                            DefaultDimensionalFactor = 6000.0,
                            IsActive = true,
                            IsBulky = true,
                            IsFragile = false,
                            Name = "Large Furniture",
                            RequiresAssembly = true
                        },
                        new
                        {
                            Id = 102,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3702),
                            DefaultDimensionalFactor = 5000.0,
                            IsActive = true,
                            IsBulky = true,
                            IsFragile = false,
                            Name = "Medium Furniture",
                            RequiresAssembly = false
                        },
                        new
                        {
                            Id = 103,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3704),
                            DefaultDimensionalFactor = 4000.0,
                            IsActive = true,
                            IsBulky = false,
                            IsFragile = true,
                            Name = "Decor Items",
                            RequiresAssembly = false
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ProductFabric", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Desccription")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FabricCode")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("UPHFabricId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UPHFabricId");

                    b.HasIndex("FabricCode", "IsActive");

                    b.ToTable("ProductFabrics", (string)null);
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrimary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("ProductVariantId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductVariantId");

                    b.ToTable("ProductImages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3485),
                            ImageUrl = "/images/blk_36_1.jpg",
                            IsActive = true,
                            IsPrimary = true,
                            ProductVariantId = 1,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3488),
                            ImageUrl = "/images/blk_36_2.jpg",
                            IsActive = true,
                            IsPrimary = false,
                            ProductVariantId = 1,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3489),
                            ImageUrl = "/images/blk_36_3.jpg",
                            IsActive = true,
                            IsPrimary = false,
                            ProductVariantId = 1,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3490),
                            ImageUrl = "/images/blk_42_1.jpg",
                            IsActive = true,
                            IsPrimary = true,
                            ProductVariantId = 2,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3491),
                            ImageUrl = "/images/blk_42_2.jpg",
                            IsActive = true,
                            IsPrimary = false,
                            ProductVariantId = 2,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3492),
                            ImageUrl = "/images/wht_36_1.jpg",
                            IsActive = true,
                            IsPrimary = true,
                            ProductVariantId = 3,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3493),
                            ImageUrl = "/images/wht_36_2.jpg",
                            IsActive = true,
                            IsPrimary = false,
                            ProductVariantId = 3,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3494),
                            ImageUrl = "/images/oak_42_1.jpg",
                            IsActive = true,
                            IsPrimary = true,
                            ProductVariantId = 4,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3494),
                            ImageUrl = "/images/oak_42_2.jpg",
                            IsActive = true,
                            IsPrimary = false,
                            ProductVariantId = 4,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3495),
                            ImageUrl = "/images/oak_52_1.jpg",
                            IsActive = true,
                            IsPrimary = true,
                            ProductVariantId = 5,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3496),
                            ImageUrl = "/images/oak_52_2.jpg",
                            IsActive = true,
                            IsPrimary = false,
                            ProductVariantId = 5,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3497),
                            ImageUrl = "/images/oak_52_3.jpg",
                            IsActive = true,
                            IsPrimary = false,
                            ProductVariantId = 5,
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ProductOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProductOptions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3267),
                            IsActive = true,
                            Name = "Color"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3306),
                            IsActive = true,
                            Name = "Size"
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ProductOptionValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProductOptionId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("ProductOptionId");

                    b.ToTable("ProductOptionValues", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3335),
                            IsActive = true,
                            ProductOptionId = 1,
                            Value = "Deep Black"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3337),
                            IsActive = true,
                            ProductOptionId = 1,
                            Value = "White"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3338),
                            IsActive = true,
                            ProductOptionId = 1,
                            Value = "Oak"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3338),
                            IsActive = true,
                            ProductOptionId = 2,
                            Value = "36x12x40"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3341),
                            IsActive = true,
                            ProductOptionId = 2,
                            Value = "42x16x48"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3342),
                            IsActive = true,
                            ProductOptionId = 2,
                            Value = "48x18x52"
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ProductPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Currency")
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.HasIndex("ProductId", "RegionId", "EffectiveDate")
                        .IsUnique();

                    b.ToTable("ProductPrices", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3817),
                            Currency = "USD",
                            EffectiveDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Price = 1800.00m,
                            ProductId = 1,
                            RegionId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3983),
                            Currency = "VND",
                            EffectiveDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Price = 38000000.00m,
                            ProductId = 1,
                            RegionId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3991),
                            Currency = "GBP",
                            EffectiveDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Price = 1500.00m,
                            ProductId = 1,
                            RegionId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3996),
                            Currency = "SGD",
                            EffectiveDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Price = 2500.00m,
                            ProductId = 1,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(4000),
                            Currency = "CNY",
                            EffectiveDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Price = 13000.00m,
                            ProductId = 1,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(4004),
                            Currency = "RUB",
                            EffectiveDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Price = 160000.00m,
                            ProductId = 1,
                            RegionId = 6
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(4009),
                            Currency = "IDR",
                            EffectiveDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Price = 28000000.00m,
                            ProductId = 1,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(4013),
                            Currency = "USD",
                            EffectiveDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Price = 550.00m,
                            ProductId = 2,
                            RegionId = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(4017),
                            Currency = "VND",
                            EffectiveDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Price = 12000000.00m,
                            ProductId = 2,
                            RegionId = 2
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(4021),
                            Currency = "GBP",
                            EffectiveDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Price = 450.00m,
                            ProductId = 2,
                            RegionId = 3
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(4041),
                            Currency = "SGD",
                            EffectiveDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Price = 700.00m,
                            ProductId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(4046),
                            Currency = "CNY",
                            EffectiveDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Price = 3800.00m,
                            ProductId = 2,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(4050),
                            Currency = "RUB",
                            EffectiveDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Price = 45000.00m,
                            ProductId = 2,
                            RegionId = 6
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(4054),
                            Currency = "IDR",
                            EffectiveDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Price = 8000000.00m,
                            ProductId = 2,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(4059),
                            Currency = "USD",
                            EffectiveDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Price = 120.00m,
                            ProductId = 3,
                            RegionId = 1
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(4080),
                            Currency = "VND",
                            EffectiveDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Price = 2500000.00m,
                            ProductId = 3,
                            RegionId = 2
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(4084),
                            Currency = "GBP",
                            EffectiveDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Price = 90.00m,
                            ProductId = 3,
                            RegionId = 3
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(4124),
                            Currency = "SGD",
                            EffectiveDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Price = 160.00m,
                            ProductId = 3,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(4129),
                            Currency = "CNY",
                            EffectiveDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Price = 800.00m,
                            ProductId = 3,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(4134),
                            Currency = "RUB",
                            EffectiveDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Price = 9000.00m,
                            ProductId = 3,
                            RegionId = 6
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(4138),
                            Currency = "IDR",
                            EffectiveDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            Price = 1500000.00m,
                            ProductId = 3,
                            RegionId = 7
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ProductRegionAvailability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AvailableFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AvailableTo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.HasIndex("ProductId", "RegionId")
                        .IsUnique();

                    b.ToTable("ProductRegionAvailabilitys", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvailableFrom = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3606),
                            IsActive = true,
                            IsAvailable = false,
                            ProductId = 1,
                            RegionId = 1
                        },
                        new
                        {
                            Id = 2,
                            AvailableFrom = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3608),
                            IsActive = true,
                            IsAvailable = false,
                            ProductId = 1,
                            RegionId = 2
                        },
                        new
                        {
                            Id = 3,
                            AvailableFrom = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3609),
                            IsActive = true,
                            IsAvailable = false,
                            ProductId = 1,
                            RegionId = 3
                        },
                        new
                        {
                            Id = 4,
                            AvailableFrom = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3610),
                            IsActive = true,
                            IsAvailable = false,
                            ProductId = 1,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 5,
                            AvailableFrom = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3611),
                            IsActive = true,
                            IsAvailable = false,
                            ProductId = 1,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 6,
                            AvailableFrom = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3612),
                            IsActive = true,
                            IsAvailable = false,
                            ProductId = 1,
                            RegionId = 6
                        },
                        new
                        {
                            Id = 7,
                            AvailableFrom = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3613),
                            IsActive = true,
                            IsAvailable = false,
                            ProductId = 1,
                            RegionId = 7
                        },
                        new
                        {
                            Id = 8,
                            AvailableFrom = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3614),
                            IsActive = true,
                            IsAvailable = false,
                            ProductId = 2,
                            RegionId = 1
                        },
                        new
                        {
                            Id = 9,
                            AvailableFrom = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3614),
                            IsActive = true,
                            IsAvailable = false,
                            ProductId = 2,
                            RegionId = 2
                        },
                        new
                        {
                            Id = 10,
                            AvailableFrom = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3615),
                            IsActive = true,
                            IsAvailable = false,
                            ProductId = 2,
                            RegionId = 3
                        },
                        new
                        {
                            Id = 11,
                            AvailableFrom = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3652),
                            IsActive = true,
                            IsAvailable = false,
                            ProductId = 2,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 12,
                            AvailableFrom = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3653),
                            IsActive = true,
                            IsAvailable = false,
                            ProductId = 3,
                            RegionId = 1
                        },
                        new
                        {
                            Id = 13,
                            AvailableFrom = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3654),
                            IsActive = true,
                            IsAvailable = false,
                            ProductId = 3,
                            RegionId = 2
                        },
                        new
                        {
                            Id = 14,
                            AvailableFrom = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3654),
                            IsActive = true,
                            IsAvailable = false,
                            ProductId = 3,
                            RegionId = 3
                        },
                        new
                        {
                            Id = 15,
                            AvailableFrom = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3655),
                            IsActive = true,
                            IsAvailable = false,
                            ProductId = 3,
                            RegionId = 4
                        },
                        new
                        {
                            Id = 16,
                            AvailableFrom = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3656),
                            IsActive = true,
                            IsAvailable = false,
                            ProductId = 3,
                            RegionId = 5
                        },
                        new
                        {
                            Id = 17,
                            AvailableFrom = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3657),
                            IsActive = true,
                            IsAvailable = false,
                            ProductId = 3,
                            RegionId = 6
                        },
                        new
                        {
                            Id = 18,
                            AvailableFrom = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3658),
                            IsActive = true,
                            IsAvailable = false,
                            ProductId = 3,
                            RegionId = 7
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ProductShippingProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<double>("DefaultDimensionalFactor")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBulky")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("RequiresPallet")
                        .HasColumnType("bit");

                    b.Property<bool>("RequiresSpecialEquipment")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProductShippingProfiles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 201,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3731),
                            DefaultDimensionalFactor = 6000.0,
                            Description = "Requires freight shipping, often palletized",
                            IsActive = true,
                            IsBulky = true,
                            Name = "Dining Table (Freight)",
                            RequiresPallet = true,
                            RequiresSpecialEquipment = true
                        },
                        new
                        {
                            Id = 202,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3735),
                            DefaultDimensionalFactor = 5000.0,
                            Description = "Can be shipped as large parcel or small freight",
                            IsActive = true,
                            IsBulky = false,
                            Name = "Cocktail Table (Freight/Parcel)",
                            RequiresPallet = false,
                            RequiresSpecialEquipment = false
                        },
                        new
                        {
                            Id = 203,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3736),
                            DefaultDimensionalFactor = 4000.0,
                            Description = "Small, non-bulky items, suitable for courier",
                            IsActive = true,
                            IsBulky = false,
                            Name = "Standard Parcel",
                            RequiresPallet = false,
                            RequiresSpecialEquipment = false
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ProductTranslation", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("MetaKeyword")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductId", "LanguageId");

                    b.ToTable("ProductTranslations", (string)null);
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("MetaKeyword")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.HasIndex("Slug", "IsActive")
                        .IsUnique();

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("Slug", "IsActive"), new[] { "Name", "Description", "ImageUrl", "SortOrder", "MetaDescription", "MetaKeyword" });

                    b.ToTable("ProductTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1880),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Bookcases & Etageres",
                            RoomId = 1,
                            Slug = "bookcases--etageres",
                            SortOrder = 100
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1905),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Desks & Bureauxs",
                            RoomId = 1,
                            Slug = "Desks--Bureauxs",
                            SortOrder = 200
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1925),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Desk Chairs",
                            RoomId = 1,
                            Slug = "desk-chairs",
                            SortOrder = 300
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1945),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Round Dining Tables",
                            RoomId = 2,
                            Slug = "round-dining-tables",
                            SortOrder = 400
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1963),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Rectangular & Oval Dining Table",
                            RoomId = 2,
                            Slug = "rectangular--oval-dining-table",
                            SortOrder = 500
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1981),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Bar Carts & Cabinets",
                            RoomId = 2,
                            Slug = "bar-carts--cabinets",
                            SortOrder = 600
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1999),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Bar & Counter Stools",
                            RoomId = 2,
                            Slug = "bar--counter-stools",
                            SortOrder = 700
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2016),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Bar & Pub Tables",
                            RoomId = 2,
                            Slug = "bar--pub-tables",
                            SortOrder = 800
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2065),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "China & Curio Cabinets",
                            RoomId = 2,
                            Slug = "china--curio-cabinets",
                            SortOrder = 900
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2086),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Dining Chairs",
                            RoomId = 2,
                            Slug = "dining-chairs",
                            SortOrder = 1000
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2103),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Sideboards & Buffets",
                            RoomId = 2,
                            Slug = "sideboards--buffets",
                            SortOrder = 1100
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2129),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Free Standing Accessories",
                            RoomId = 3,
                            Slug = "free-standing-accessories",
                            SortOrder = 1200
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2146),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Mirrors",
                            RoomId = 3,
                            Slug = "mirrors",
                            SortOrder = 1300
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2162),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Table Top Accessories",
                            RoomId = 3,
                            Slug = "table-top-accessories",
                            SortOrder = 1400
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2179),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Wall Art",
                            RoomId = 3,
                            Slug = "wall-art",
                            SortOrder = 1500
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2205),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Ceiling Lighting",
                            RoomId = 4,
                            Slug = "ceiling-lighting",
                            SortOrder = 1600
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2222),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Floor Lighting",
                            RoomId = 4,
                            Slug = "floor-lighting",
                            SortOrder = 1700
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2241),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Table Lighting",
                            RoomId = 4,
                            Slug = "table-lighting",
                            SortOrder = 1800
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2258),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Storage",
                            RoomId = 5,
                            Slug = "storage",
                            SortOrder = 1900
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2285),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Beds",
                            RoomId = 5,
                            Slug = "beds",
                            SortOrder = 2000
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2302),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Benches",
                            RoomId = 5,
                            Slug = "benches",
                            SortOrder = 2100
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2319),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Dressers & Chests",
                            RoomId = 5,
                            Slug = "dressers--chests",
                            SortOrder = 2200
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2344),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Nightstands",
                            RoomId = 5,
                            Slug = "nightstands",
                            SortOrder = 2300
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2362),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Vanity Tables",
                            RoomId = 5,
                            Slug = "vanity-tables",
                            SortOrder = 2400
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2378),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Media Cabinets",
                            RoomId = 6,
                            Slug = "Media-Cabinets",
                            SortOrder = 2500
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2395),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Accent Chairs",
                            RoomId = 6,
                            Slug = "accent-chairs",
                            SortOrder = 2600
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2411),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Accent Tables",
                            RoomId = 6,
                            Slug = "accent-tables",
                            SortOrder = 2700
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2437),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Center Tables",
                            RoomId = 6,
                            Slug = "center-tables",
                            SortOrder = 2800
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2454),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Cocktail Tables",
                            RoomId = 6,
                            Slug = "cocktail-tables",
                            SortOrder = 2900
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2547),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Console Tables",
                            RoomId = 6,
                            Slug = "console-tables",
                            SortOrder = 3000
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2569),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Game Tables",
                            RoomId = 6,
                            Slug = "game-tables",
                            SortOrder = 3100
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2605),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Ottomans & Stools",
                            RoomId = 6,
                            Slug = "ottomans--stools",
                            SortOrder = 3200
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2622),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Sectionals",
                            RoomId = 6,
                            Slug = "sectionals",
                            SortOrder = 3300
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2640),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Side Tables",
                            RoomId = 6,
                            Slug = "side-tables",
                            SortOrder = 3400
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2656),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Sofas & Settees",
                            RoomId = 6,
                            Slug = "sofas--settees",
                            SortOrder = 3500
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(2672),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Storage Cabinets",
                            RoomId = 6,
                            Slug = "storage-cabinets",
                            SortOrder = 3600
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ProductVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("PriceAdjustment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductVariants", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3380),
                            IsActive = false,
                            PriceAdjustment = 49.99m,
                            ProductId = 1,
                            Sku = "BLK-36"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3383),
                            IsActive = false,
                            PriceAdjustment = 54.99m,
                            ProductId = 1,
                            Sku = "BLK-42"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3385),
                            IsActive = false,
                            PriceAdjustment = 59.99m,
                            ProductId = 1,
                            Sku = "WHT-36"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3386),
                            IsActive = false,
                            PriceAdjustment = 64.99m,
                            ProductId = 1,
                            Sku = "OAK-42"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3387),
                            IsActive = false,
                            PriceAdjustment = 69.99m,
                            ProductId = 1,
                            Sku = "OAK-52"
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ProductVariantOptionValue", b =>
                {
                    b.Property<int>("ProductVariantId")
                        .HasColumnType("int");

                    b.Property<int>("ProductOptionValueId")
                        .HasColumnType("int");

                    b.HasKey("ProductVariantId", "ProductOptionValueId");

                    b.HasIndex("ProductOptionValueId");

                    b.ToTable("ProductVariantOptionValues", (string)null);

                    b.HasData(
                        new
                        {
                            ProductVariantId = 1,
                            ProductOptionValueId = 1
                        },
                        new
                        {
                            ProductVariantId = 1,
                            ProductOptionValueId = 4
                        },
                        new
                        {
                            ProductVariantId = 2,
                            ProductOptionValueId = 1
                        },
                        new
                        {
                            ProductVariantId = 2,
                            ProductOptionValueId = 5
                        },
                        new
                        {
                            ProductVariantId = 3,
                            ProductOptionValueId = 2
                        },
                        new
                        {
                            ProductVariantId = 3,
                            ProductOptionValueId = 4
                        },
                        new
                        {
                            ProductVariantId = 4,
                            ProductOptionValueId = 3
                        },
                        new
                        {
                            ProductVariantId = 4,
                            ProductOptionValueId = 5
                        },
                        new
                        {
                            ProductVariantId = 5,
                            ProductOptionValueId = 3
                        },
                        new
                        {
                            ProductVariantId = 5,
                            ProductOptionValueId = 6
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Currency")
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("Description")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("Regions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "US",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1899),
                            Currency = "USD",
                            Description = "North American Region",
                            IsActive = true,
                            Latitude = 37.090200000000003,
                            Longitude = -95.712900000000005,
                            Name = "United States"
                        },
                        new
                        {
                            Id = 2,
                            Code = "VN",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1904),
                            Currency = "VND",
                            Description = "Southeast Asia Region",
                            IsActive = true,
                            Latitude = 14.058299999999999,
                            Longitude = 108.27719999999999,
                            Name = "Vietnam"
                        },
                        new
                        {
                            Id = 3,
                            Code = "GB",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1906),
                            Currency = "GBP",
                            Description = "European Region",
                            IsActive = true,
                            Latitude = 55.378100000000003,
                            Longitude = -3.4359999999999999,
                            Name = "United Kingdom"
                        },
                        new
                        {
                            Id = 4,
                            Code = "SG",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1907),
                            Currency = "SGD",
                            Description = "Southeast Asia Hub",
                            IsActive = true,
                            Latitude = 1.3521000000000001,
                            Longitude = 103.8198,
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = 5,
                            Code = "CN",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1909),
                            Currency = "CNY",
                            Description = "East Asia Region",
                            IsActive = true,
                            Latitude = 35.861699999999999,
                            Longitude = 104.19540000000001,
                            Name = "China"
                        },
                        new
                        {
                            Id = 6,
                            Code = "RU",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1910),
                            Currency = "RUB",
                            Description = "Eurasia Region",
                            IsActive = true,
                            Latitude = 61.524000000000001,
                            Longitude = 105.3188,
                            Name = "Russia"
                        },
                        new
                        {
                            Id = 7,
                            Code = "ID",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1911),
                            Currency = "IDR",
                            Description = "Southeast Asia Archipelago",
                            IsActive = true,
                            Latitude = -0.7893,
                            Longitude = 113.9213,
                            Name = "Indonesia"
                        },
                        new
                        {
                            Id = 8,
                            Code = "CA",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1912),
                            Currency = "CAD",
                            Description = "North American Region",
                            IsActive = true,
                            Latitude = 56.130400000000002,
                            Longitude = -106.3468,
                            Name = "Canada"
                        },
                        new
                        {
                            Id = 9,
                            Code = "MX",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1914),
                            Currency = "MXN",
                            Description = "North American Region",
                            IsActive = true,
                            Latitude = 23.634499999999999,
                            Longitude = -102.5528,
                            Name = "Mexico"
                        },
                        new
                        {
                            Id = 10,
                            Code = "BR",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1915),
                            Currency = "BRL",
                            Description = "South American Region",
                            IsActive = true,
                            Latitude = -14.234999999999999,
                            Longitude = -51.9253,
                            Name = "Brazil"
                        },
                        new
                        {
                            Id = 11,
                            Code = "DE",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1916),
                            Currency = "EUR",
                            Description = "European Region",
                            IsActive = true,
                            Latitude = 51.165700000000001,
                            Longitude = 10.451499999999999,
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 12,
                            Code = "IT",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1917),
                            Currency = "EUR",
                            Description = "European Region",
                            IsActive = true,
                            Latitude = 41.871899999999997,
                            Longitude = 12.567399999999999,
                            Name = "Italy"
                        },
                        new
                        {
                            Id = 13,
                            Code = "ES",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1919),
                            Currency = "EUR",
                            Description = "European Region",
                            IsActive = true,
                            Latitude = 40.463700000000003,
                            Longitude = -3.7492000000000001,
                            Name = "Spain"
                        },
                        new
                        {
                            Id = 14,
                            Code = "AU",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1920),
                            Currency = "AUD",
                            Description = "Oceania Region",
                            IsActive = true,
                            Latitude = -25.2744,
                            Longitude = 133.77510000000001,
                            Name = "Australia"
                        },
                        new
                        {
                            Id = 15,
                            Code = "JP",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1921),
                            Currency = "JPY",
                            Description = "East Asia Region",
                            IsActive = true,
                            Latitude = 36.204799999999999,
                            Longitude = 138.25290000000001,
                            Name = "Japan"
                        },
                        new
                        {
                            Id = 16,
                            Code = "IN",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1922),
                            Currency = "INR",
                            Description = "South Asia Region",
                            IsActive = true,
                            Latitude = 20.593699999999998,
                            Longitude = 78.962900000000005,
                            Name = "India"
                        },
                        new
                        {
                            Id = 17,
                            Code = "AE",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1924),
                            Currency = "AED",
                            Description = "Middle East Region",
                            IsActive = true,
                            Latitude = 23.424099999999999,
                            Longitude = 53.847799999999999,
                            Name = "United Arab Emirates"
                        },
                        new
                        {
                            Id = 18,
                            Code = "ZA",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1925),
                            Currency = "ZAR",
                            Description = "African Regio",
                            IsActive = true,
                            Latitude = -30.5595,
                            Longitude = 22.9375,
                            Name = "South Africa"
                        },
                        new
                        {
                            Id = 19,
                            Code = "KR",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1926),
                            Currency = "KRW",
                            Description = "East Asia Region",
                            IsActive = true,
                            Latitude = 35.907800000000002,
                            Longitude = 127.76690000000001,
                            Name = "South Korea"
                        },
                        new
                        {
                            Id = 20,
                            Code = "PH",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1928),
                            Currency = "PHP",
                            Description = "Southeast Asia Region",
                            IsActive = true,
                            Latitude = 12.8797,
                            Longitude = 121.774,
                            Name = "Philippines"
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("MetaKeyword")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Slug", "IsActive")
                        .IsUnique();

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("Slug", "IsActive"), new[] { "Name", "Description", "ImageUrl", "SortOrder", "MetaDescription", "MetaKeyword" });

                    b.ToTable("Rooms", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1262),
                            Description = "living",
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Room/living-room/1.jpg",
                            IsActive = true,
                            Name = "Living",
                            Slug = "living-room",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1285),
                            Description = "dining",
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Room/dining-room/1.jpg",
                            IsActive = true,
                            Name = "Dining",
                            Slug = "dining-room",
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1304),
                            Description = "bedroom",
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Room/bedroom/1.jpg",
                            IsActive = true,
                            Name = "Bed",
                            Slug = "bedroom",
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1320),
                            Description = "office",
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Room/office/1.jpg",
                            IsActive = true,
                            Name = "Office",
                            Slug = "office",
                            SortOrder = 40
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1357),
                            Description = "lighting",
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Room/lighting/1.jpg",
                            IsActive = true,
                            Name = "Lighting",
                            Slug = "lighting",
                            SortOrder = 50
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1378),
                            Description = "decor",
                            ImageUrl = "https://ik.imagekit.io/9float9hy/Banner_for_Room/decor/1.jpg",
                            IsActive = true,
                            Name = "Décor",
                            Slug = "decor",
                            SortOrder = 60
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ShippingRateRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ApplyFloorSurcharge")
                        .HasColumnType("bit");

                    b.Property<decimal>("BaseRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("DestinationShippingZoneId")
                        .HasColumnType("int");

                    b.Property<decimal>("FlatSurcharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FreeShippingMinOrderValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("GlobalShippingLaneId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsFreeShippingThreshold")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRuralAreaSurcharge")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaxApplicableCbm")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaxApplicableWeightKg")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MaxItemsInOrder")
                        .HasColumnType("int");

                    b.Property<decimal>("MaxOrderValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaxOrderWeightOrVolume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaxWeightKg")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinApplicableCbm")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinApplicableWeightKg")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MinFloorForSurcharge")
                        .HasColumnType("int");

                    b.Property<int>("MinItemsInOrder")
                        .HasColumnType("int");

                    b.Property<decimal>("MinOrderValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinOrderWeightOrVolume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinWeightKg")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OriginShippingZoneId")
                        .HasColumnType("int");

                    b.Property<decimal>("PercentageSurcharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductShippingProfileId")
                        .HasColumnType("int");

                    b.Property<decimal>("RatePerCbm")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RatePerItem")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RatePerKg")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RuleName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<decimal>("RuralAreaSurchargeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ShippingServiceLevelId")
                        .HasColumnType("int");

                    b.Property<decimal>("SurchargePerFloor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SurchargeReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DestinationShippingZoneId");

                    b.HasIndex("GlobalShippingLaneId");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("ProductShippingProfileId");

                    b.HasIndex("ShippingServiceLevelId");

                    b.HasIndex("OriginShippingZoneId", "DestinationShippingZoneId", "ShippingServiceLevelId", "ProductShippingProfileId", "IsActive");

                    b.ToTable("ShippingRateRules", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1001,
                            ApplyFloorSurcharge = false,
                            BaseRate = 500m,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3132),
                            DestinationShippingZoneId = 102,
                            FlatSurcharge = 50m,
                            FreeShippingMinOrderValue = 0m,
                            GlobalShippingLaneId = 1,
                            IsActive = true,
                            IsFreeShippingThreshold = false,
                            IsRuralAreaSurcharge = false,
                            MaxApplicableCbm = 10m,
                            MaxApplicableWeightKg = 0m,
                            MaxItemsInOrder = 0,
                            MaxOrderValue = 4999m,
                            MaxOrderWeightOrVolume = 0m,
                            MaxWeightKg = 0m,
                            MinApplicableCbm = 0.5m,
                            MinApplicableWeightKg = 0m,
                            MinFloorForSurcharge = 0,
                            MinItemsInOrder = 0,
                            MinOrderValue = 0m,
                            MinOrderWeightOrVolume = 0m,
                            MinWeightKg = 0m,
                            OriginShippingZoneId = 101,
                            PercentageSurcharge = 0m,
                            ProductShippingProfileId = 201,
                            RatePerCbm = 150m,
                            RatePerItem = 0m,
                            RatePerKg = 0m,
                            RuleName = "Ocean Freight VN to US - Large Furniture (Port-to-Port)",
                            RuralAreaSurchargeAmount = 0m,
                            ShippingServiceLevelId = 1,
                            SurchargePerFloor = 0m,
                            SurchargeReason = "Customs Admin Fee"
                        },
                        new
                        {
                            Id = 1002,
                            ApplyFloorSurcharge = true,
                            BaseRate = 250m,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3142),
                            DestinationShippingZoneId = 103,
                            FlatSurcharge = 0m,
                            FreeShippingMinOrderValue = 0m,
                            IsActive = true,
                            IsFreeShippingThreshold = false,
                            IsRuralAreaSurcharge = false,
                            MaxApplicableCbm = 0m,
                            MaxApplicableWeightKg = 0m,
                            MaxItemsInOrder = 0,
                            MaxOrderValue = 0m,
                            MaxOrderWeightOrVolume = 0m,
                            MaxWeightKg = 0m,
                            MinApplicableCbm = 0m,
                            MinApplicableWeightKg = 0m,
                            MinFloorForSurcharge = 2,
                            MinItemsInOrder = 0,
                            MinOrderValue = 0m,
                            MinOrderWeightOrVolume = 0m,
                            MinWeightKg = 0m,
                            OriginShippingZoneId = 102,
                            PercentageSurcharge = 0m,
                            ProductShippingProfileId = 201,
                            RatePerCbm = 0m,
                            RatePerItem = 50m,
                            RatePerKg = 0m,
                            RuleName = "LA Metro White Glove Delivery - Large Furniture",
                            RuralAreaSurchargeAmount = 0m,
                            ShippingServiceLevelId = 2,
                            SurchargePerFloor = 25m,
                            SurchargeReason = "Inside Delivery & Assembly"
                        },
                        new
                        {
                            Id = 1003,
                            ApplyFloorSurcharge = false,
                            BaseRate = 1200m,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3146),
                            DestinationShippingZoneId = 102,
                            FlatSurcharge = 0m,
                            FreeShippingMinOrderValue = 0m,
                            GlobalShippingLaneId = 2,
                            IsActive = true,
                            IsFreeShippingThreshold = false,
                            IsRuralAreaSurcharge = false,
                            MaxApplicableCbm = 0m,
                            MaxApplicableWeightKg = 500m,
                            MaxItemsInOrder = 0,
                            MaxOrderValue = 0m,
                            MaxOrderWeightOrVolume = 0m,
                            MaxWeightKg = 0m,
                            MinApplicableCbm = 0m,
                            MinApplicableWeightKg = 0m,
                            MinFloorForSurcharge = 0,
                            MinItemsInOrder = 0,
                            MinOrderValue = 0m,
                            MinOrderWeightOrVolume = 0m,
                            MinWeightKg = 0m,
                            OriginShippingZoneId = 101,
                            PercentageSurcharge = 0m,
                            ProductShippingProfileId = 201,
                            RatePerCbm = 0m,
                            RatePerItem = 0m,
                            RatePerKg = 15m,
                            RuleName = "Air Freight VN to US - Large Furniture (Expedited)",
                            RuralAreaSurchargeAmount = 0m,
                            ShippingServiceLevelId = 3,
                            SurchargePerFloor = 0m,
                            SurchargeReason = "Air Fuel Surcharge"
                        },
                        new
                        {
                            Id = 1004,
                            ApplyFloorSurcharge = false,
                            BaseRate = 0m,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3150),
                            DestinationShippingZoneId = 102,
                            FlatSurcharge = 0m,
                            FreeShippingMinOrderValue = 5000m,
                            IsActive = true,
                            IsFreeShippingThreshold = true,
                            IsRuralAreaSurcharge = false,
                            MaxApplicableCbm = 0m,
                            MaxApplicableWeightKg = 0m,
                            MaxItemsInOrder = 0,
                            MaxOrderValue = 0m,
                            MaxOrderWeightOrVolume = 0m,
                            MaxWeightKg = 0m,
                            MinApplicableCbm = 0m,
                            MinApplicableWeightKg = 0m,
                            MinFloorForSurcharge = 0,
                            MinItemsInOrder = 0,
                            MinOrderValue = 0m,
                            MinOrderWeightOrVolume = 0m,
                            MinWeightKg = 0m,
                            OriginShippingZoneId = 101,
                            PercentageSurcharge = 0m,
                            RatePerCbm = 0m,
                            RatePerItem = 0m,
                            RatePerKg = 0m,
                            RuleName = "International Freight Free Shipping > $5000 (VN to US)",
                            RuralAreaSurchargeAmount = 0m,
                            ShippingServiceLevelId = 1,
                            SurchargePerFloor = 0m
                        },
                        new
                        {
                            Id = 1005,
                            ApplyFloorSurcharge = false,
                            BaseRate = 300000m,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3155),
                            DestinationShippingZoneId = 105,
                            FlatSurcharge = 0m,
                            FreeShippingMinOrderValue = 0m,
                            IsActive = true,
                            IsFreeShippingThreshold = false,
                            IsRuralAreaSurcharge = false,
                            MaxApplicableCbm = 5m,
                            MaxApplicableWeightKg = 0m,
                            MaxItemsInOrder = 0,
                            MaxOrderValue = 0m,
                            MaxOrderWeightOrVolume = 0m,
                            MaxWeightKg = 0m,
                            MinApplicableCbm = 0.1m,
                            MinApplicableWeightKg = 0m,
                            MinFloorForSurcharge = 0,
                            MinItemsInOrder = 0,
                            MinOrderValue = 0m,
                            MinOrderWeightOrVolume = 0m,
                            MinWeightKg = 0m,
                            OriginShippingZoneId = 104,
                            PercentageSurcharge = 0m,
                            RatePerCbm = 100000m,
                            RatePerItem = 0m,
                            RatePerKg = 0m,
                            RuleName = "Domestic Freight VN South to North",
                            RuralAreaSurchargeAmount = 0m,
                            ShippingServiceLevelId = 4,
                            SurchargePerFloor = 0m
                        },
                        new
                        {
                            Id = 1006,
                            ApplyFloorSurcharge = false,
                            BaseRate = 450m,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3157),
                            DestinationShippingZoneId = 102,
                            FlatSurcharge = 45m,
                            FreeShippingMinOrderValue = 0m,
                            GlobalShippingLaneId = 4,
                            IsActive = true,
                            IsFreeShippingThreshold = false,
                            IsRuralAreaSurcharge = false,
                            MaxApplicableCbm = 10m,
                            MaxApplicableWeightKg = 0m,
                            MaxItemsInOrder = 0,
                            MaxOrderValue = 0m,
                            MaxOrderWeightOrVolume = 0m,
                            MaxWeightKg = 0m,
                            MinApplicableCbm = 0.5m,
                            MinApplicableWeightKg = 0m,
                            MinFloorForSurcharge = 0,
                            MinItemsInOrder = 0,
                            MinOrderValue = 0m,
                            MinOrderWeightOrVolume = 0m,
                            MinWeightKg = 0m,
                            OriginShippingZoneId = 108,
                            PercentageSurcharge = 0m,
                            ProductShippingProfileId = 201,
                            RatePerCbm = 140m,
                            RatePerItem = 0m,
                            RatePerKg = 0m,
                            RuleName = "Ocean Freight CN to US - Large Furniture",
                            RuralAreaSurchargeAmount = 0m,
                            ShippingServiceLevelId = 1,
                            SurchargePerFloor = 0m,
                            SurchargeReason = "Customs Handling CN"
                        },
                        new
                        {
                            Id = 1007,
                            ApplyFloorSurcharge = false,
                            BaseRate = 100m,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3160),
                            DestinationShippingZoneId = 103,
                            FlatSurcharge = 0m,
                            FreeShippingMinOrderValue = 0m,
                            IsActive = true,
                            IsFreeShippingThreshold = false,
                            IsRuralAreaSurcharge = true,
                            MaxApplicableCbm = 0m,
                            MaxApplicableWeightKg = 500m,
                            MaxItemsInOrder = 0,
                            MaxOrderValue = 0m,
                            MaxOrderWeightOrVolume = 0m,
                            MaxWeightKg = 0m,
                            MinApplicableCbm = 0m,
                            MinApplicableWeightKg = 10m,
                            MinFloorForSurcharge = 0,
                            MinItemsInOrder = 0,
                            MinOrderValue = 0m,
                            MinOrderWeightOrVolume = 0m,
                            MinWeightKg = 0m,
                            OriginShippingZoneId = 103,
                            PercentageSurcharge = 0m,
                            RatePerCbm = 0m,
                            RatePerItem = 0m,
                            RatePerKg = 0.5m,
                            RuleName = "Domestic US - From LA Hub (Standard)",
                            RuralAreaSurchargeAmount = 50m,
                            ShippingServiceLevelId = 5,
                            SurchargePerFloor = 0m
                        },
                        new
                        {
                            Id = 1008,
                            ApplyFloorSurcharge = true,
                            BaseRate = 200m,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3175),
                            DestinationShippingZoneId = 103,
                            FlatSurcharge = 0m,
                            FreeShippingMinOrderValue = 0m,
                            IsActive = true,
                            IsFreeShippingThreshold = false,
                            IsRuralAreaSurcharge = false,
                            MaxApplicableCbm = 0m,
                            MaxApplicableWeightKg = 0m,
                            MaxItemsInOrder = 0,
                            MaxOrderValue = 0m,
                            MaxOrderWeightOrVolume = 0m,
                            MaxWeightKg = 0m,
                            MinApplicableCbm = 0m,
                            MinApplicableWeightKg = 0m,
                            MinFloorForSurcharge = 2,
                            MinItemsInOrder = 0,
                            MinOrderValue = 0m,
                            MinOrderWeightOrVolume = 0m,
                            MinWeightKg = 0m,
                            OriginShippingZoneId = 103,
                            PercentageSurcharge = 0m,
                            ProductShippingProfileId = 201,
                            RatePerCbm = 0m,
                            RatePerItem = 40m,
                            RatePerKg = 0m,
                            RuleName = "Domestic US - From LA Hub (White Glove)",
                            RuralAreaSurchargeAmount = 0m,
                            ShippingServiceLevelId = 2,
                            SurchargePerFloor = 20m
                        },
                        new
                        {
                            Id = 1009,
                            ApplyFloorSurcharge = false,
                            BaseRate = 150m,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3178),
                            DestinationShippingZoneId = 110,
                            FlatSurcharge = 0m,
                            FreeShippingMinOrderValue = 0m,
                            GlobalShippingLaneId = 6,
                            IsActive = true,
                            IsFreeShippingThreshold = false,
                            IsRuralAreaSurcharge = false,
                            MaxApplicableCbm = 5m,
                            MaxApplicableWeightKg = 0m,
                            MaxItemsInOrder = 0,
                            MaxOrderValue = 0m,
                            MaxOrderWeightOrVolume = 0m,
                            MaxWeightKg = 0m,
                            MinApplicableCbm = 0.1m,
                            MinApplicableWeightKg = 0m,
                            MinFloorForSurcharge = 0,
                            MinItemsInOrder = 0,
                            MinOrderValue = 0m,
                            MinOrderWeightOrVolume = 0m,
                            MinWeightKg = 0m,
                            OriginShippingZoneId = 111,
                            PercentageSurcharge = 0m,
                            ProductShippingProfileId = 201,
                            RatePerCbm = 50m,
                            RatePerItem = 0m,
                            RatePerKg = 0m,
                            RuleName = "Ocean Freight SG to ID",
                            RuralAreaSurchargeAmount = 0m,
                            ShippingServiceLevelId = 1,
                            SurchargePerFloor = 0m
                        },
                        new
                        {
                            Id = 1010,
                            ApplyFloorSurcharge = true,
                            BaseRate = 100m,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3181),
                            DestinationShippingZoneId = 110,
                            FlatSurcharge = 0m,
                            FreeShippingMinOrderValue = 0m,
                            IsActive = true,
                            IsFreeShippingThreshold = false,
                            IsRuralAreaSurcharge = false,
                            MaxApplicableCbm = 0m,
                            MaxApplicableWeightKg = 0m,
                            MaxItemsInOrder = 0,
                            MaxOrderValue = 0m,
                            MaxOrderWeightOrVolume = 0m,
                            MaxWeightKg = 0m,
                            MinApplicableCbm = 0m,
                            MinApplicableWeightKg = 0m,
                            MinFloorForSurcharge = 3,
                            MinItemsInOrder = 0,
                            MinOrderValue = 0m,
                            MinOrderWeightOrVolume = 0m,
                            MinWeightKg = 0m,
                            OriginShippingZoneId = 110,
                            PercentageSurcharge = 0m,
                            ProductShippingProfileId = 201,
                            RatePerCbm = 0m,
                            RatePerItem = 20m,
                            RatePerKg = 0m,
                            RuleName = "Domestic ID - From Jakarta (White Glove)",
                            RuralAreaSurchargeAmount = 0m,
                            ShippingServiceLevelId = 6,
                            SurchargePerFloor = 10m
                        },
                        new
                        {
                            Id = 1011,
                            ApplyFloorSurcharge = false,
                            BaseRate = 800m,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3183),
                            DestinationShippingZoneId = 109,
                            FlatSurcharge = 100m,
                            FreeShippingMinOrderValue = 0m,
                            GlobalShippingLaneId = 7,
                            IsActive = true,
                            IsFreeShippingThreshold = false,
                            IsRuralAreaSurcharge = false,
                            MaxApplicableCbm = 0m,
                            MaxApplicableWeightKg = 1000m,
                            MaxItemsInOrder = 0,
                            MaxOrderValue = 0m,
                            MaxOrderWeightOrVolume = 0m,
                            MaxWeightKg = 0m,
                            MinApplicableCbm = 0m,
                            MinApplicableWeightKg = 50m,
                            MinFloorForSurcharge = 0,
                            MinItemsInOrder = 0,
                            MinOrderValue = 0m,
                            MinOrderWeightOrVolume = 0m,
                            MinWeightKg = 0m,
                            OriginShippingZoneId = 108,
                            PercentageSurcharge = 0m,
                            ProductShippingProfileId = 201,
                            RatePerCbm = 0m,
                            RatePerItem = 0m,
                            RatePerKg = 8m,
                            RuleName = "Rail Freight CN to Russia",
                            RuralAreaSurchargeAmount = 0m,
                            ShippingServiceLevelId = 7,
                            SurchargePerFloor = 0m,
                            SurchargeReason = "Russia Customs"
                        },
                        new
                        {
                            Id = 1012,
                            ApplyFloorSurcharge = false,
                            BaseRate = 50m,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3186),
                            DestinationShippingZoneId = 109,
                            FlatSurcharge = 0m,
                            FreeShippingMinOrderValue = 0m,
                            IsActive = true,
                            IsFreeShippingThreshold = false,
                            IsRuralAreaSurcharge = true,
                            MaxApplicableCbm = 0m,
                            MaxApplicableWeightKg = 300m,
                            MaxItemsInOrder = 0,
                            MaxOrderValue = 0m,
                            MaxOrderWeightOrVolume = 0m,
                            MaxWeightKg = 0m,
                            MinApplicableCbm = 0m,
                            MinApplicableWeightKg = 5m,
                            MinFloorForSurcharge = 0,
                            MinItemsInOrder = 0,
                            MinOrderValue = 0m,
                            MinOrderWeightOrVolume = 0m,
                            MinWeightKg = 0m,
                            OriginShippingZoneId = 109,
                            PercentageSurcharge = 0m,
                            RatePerCbm = 0m,
                            RatePerItem = 0m,
                            RatePerKg = 0.8m,
                            RuleName = "Domestic RU - From Moscow (Standard)",
                            RuralAreaSurchargeAmount = 30m,
                            ShippingServiceLevelId = 5,
                            SurchargePerFloor = 0m
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ShippingRateTier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<decimal>("FixedTierCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaxValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RatePerUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ShippingRateRuleId")
                        .HasColumnType("int");

                    b.Property<string>("TierUnit")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ShippingRateRuleId");

                    b.ToTable("ShippingRateTiers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2924),
                            FixedTierCost = 0m,
                            IsActive = true,
                            MaxValue = 100m,
                            MinValue = 0m,
                            RatePerUnit = 20m,
                            ShippingRateRuleId = 1003,
                            TierUnit = "Kg"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2933),
                            FixedTierCost = 50m,
                            IsActive = true,
                            MaxValue = 300m,
                            MinValue = 100.01m,
                            RatePerUnit = 15m,
                            ShippingRateRuleId = 1003,
                            TierUnit = "Kg"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2937),
                            FixedTierCost = 0m,
                            IsActive = true,
                            MaxValue = 100m,
                            MinValue = 10m,
                            RatePerUnit = 0.7m,
                            ShippingRateRuleId = 1007,
                            TierUnit = "Kg"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2939),
                            FixedTierCost = 20m,
                            IsActive = true,
                            MaxValue = 500m,
                            MinValue = 100.01m,
                            RatePerUnit = 0.5m,
                            ShippingRateRuleId = 1007,
                            TierUnit = "Kg"
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ShippingServiceLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("DeliveryType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstimatedDeliveryDaysMax")
                        .HasColumnType("int");

                    b.Property<int>("EstimatedDeliveryDaysMin")
                        .HasColumnType("int");

                    b.Property<bool>("IncludesAssembly")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RequiresSpecialHandling")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ShippingServiceLevels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2793),
                            DeliveryType = 0,
                            Description = "Bulk freight via ocean, port-to-port",
                            EstimatedDeliveryDaysMax = 40,
                            EstimatedDeliveryDaysMin = 25,
                            IncludesAssembly = false,
                            IsActive = true,
                            Name = "International Standard Ocean Freight",
                            RequiresSpecialHandling = true
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2799),
                            DeliveryType = 3,
                            Description = "Last-mile delivery, includes unboxing & assembly",
                            EstimatedDeliveryDaysMax = 7,
                            EstimatedDeliveryDaysMin = 3,
                            IncludesAssembly = true,
                            IsActive = true,
                            Name = "White Glove Delivery (Domestic)",
                            RequiresSpecialHandling = false
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2802),
                            DeliveryType = 0,
                            Description = "Faster air cargo, port-to-port",
                            EstimatedDeliveryDaysMax = 14,
                            EstimatedDeliveryDaysMin = 7,
                            IncludesAssembly = false,
                            IsActive = true,
                            Name = "International Air Freight (Expedited)",
                            RequiresSpecialHandling = true
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2803),
                            DeliveryType = 1,
                            Description = "Standard road freight within Vietnam",
                            EstimatedDeliveryDaysMax = 5,
                            EstimatedDeliveryDaysMin = 2,
                            IncludesAssembly = false,
                            IsActive = true,
                            Name = "Standard Domestic Freight (VN)",
                            RequiresSpecialHandling = false
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2805),
                            DeliveryType = 1,
                            Description = "Standard road freight within US",
                            EstimatedDeliveryDaysMax = 10,
                            EstimatedDeliveryDaysMin = 3,
                            IncludesAssembly = false,
                            IsActive = true,
                            Name = "Standard Domestic Freight (US)",
                            RequiresSpecialHandling = false
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2806),
                            DeliveryType = 3,
                            Description = "Local delivery with assembly in Indonesia",
                            EstimatedDeliveryDaysMax = 5,
                            EstimatedDeliveryDaysMin = 2,
                            IncludesAssembly = true,
                            IsActive = true,
                            Name = "Domestic White Glove (ID)",
                            RequiresSpecialHandling = false
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2808),
                            DeliveryType = 0,
                            Description = "Freight via rail, suitable for Eurasia",
                            EstimatedDeliveryDaysMax = 25,
                            EstimatedDeliveryDaysMin = 15,
                            IncludesAssembly = false,
                            IsActive = true,
                            Name = "International Rail Freight",
                            RequiresSpecialHandling = true
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ShippingZone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("ShippingZones", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 101,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1988),
                            Description = "Major export ports in Vietnam (HCM, Hai Phong)",
                            IsActive = true,
                            Name = "Vietnam Export Hub",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 102,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(1990),
                            Description = "Major import ports on US West Coast (LA, Long Beach, Seattle)",
                            IsActive = true,
                            Name = "US West Coast Freight Hub",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 103,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2364),
                            Description = "Last-mile delivery area for Los Angeles County",
                            IsActive = true,
                            Name = "Los Angeles Metro Area",
                            RegionId = 1
                        },
                        new
                        {
                            Id = 104,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2379),
                            Description = "Southern provinces including Ho Chi Minh City",
                            IsActive = true,
                            Name = "Vietnam Southern Region",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 105,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2380),
                            Description = "Northern provinces including Hanoi",
                            IsActive = true,
                            Name = "Vietnam Northern Region",
                            RegionId = 2
                        },
                        new
                        {
                            Id = 106,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2381),
                            Description = "Major import ports in United Kingdom",
                            IsActive = true,
                            Name = "UK Freight Hub",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 107,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2382),
                            Description = "Last-mile delivery for London",
                            IsActive = true,
                            Name = "London Metro Area",
                            RegionId = 3
                        },
                        new
                        {
                            Id = 108,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2383),
                            Description = "Major export ports in China (Shenzhen, Shanghai)",
                            IsActive = true,
                            Name = "China Export Hub",
                            RegionId = 5
                        },
                        new
                        {
                            Id = 109,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2384),
                            Description = "Moscow and surrounding regions",
                            IsActive = true,
                            Name = "Russia Moscow Area",
                            RegionId = 6
                        },
                        new
                        {
                            Id = 110,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2385),
                            Description = "Jakarta and surrounding regions",
                            IsActive = true,
                            Name = "Indonesia Jakarta Area",
                            RegionId = 7
                        },
                        new
                        {
                            Id = 111,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2385),
                            Description = "Main island of Singapore",
                            IsActive = true,
                            Name = "Singapore Main Island",
                            RegionId = 4
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ShippingZoneDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("DetailType")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ShippingZoneId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("ShippingZoneId");

                    b.HasIndex("DetailType", "Value", "ShippingZoneId");

                    b.ToTable("ShippingZoneDetails", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2606),
                            Description = "Los Angeles City (900xx zip codes)",
                            DetailType = 0,
                            IsActive = true,
                            ShippingZoneId = 103,
                            Value = "900"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2611),
                            Description = "TP.HCM",
                            DetailType = 1,
                            IsActive = true,
                            ShippingZoneId = 104,
                            Value = "Ho Chi Minh City"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2612),
                            Description = "Hà Nội",
                            DetailType = 1,
                            IsActive = true,
                            ShippingZoneId = 105,
                            Value = "Hanoi"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2613),
                            Description = "East Central London",
                            DetailType = 0,
                            IsActive = true,
                            ShippingZoneId = 107,
                            Value = "EC"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2615),
                            Description = "West End London",
                            DetailType = 0,
                            IsActive = true,
                            ShippingZoneId = 107,
                            Value = "W1"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2616),
                            Description = "Moscow and surrounding oblast",
                            DetailType = 1,
                            IsActive = true,
                            ShippingZoneId = 109,
                            Value = "Moscow Oblast"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2617),
                            Description = "Jakarta Province",
                            DetailType = 1,
                            IsActive = true,
                            ShippingZoneId = 110,
                            Value = "Jakarta"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2618),
                            Description = "All of Singapore",
                            DetailType = 2,
                            IsActive = true,
                            ShippingZoneId = 111,
                            Value = "SG"
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.Style", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("MetaKeyword")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Slug", "IsActive")
                        .IsUnique();

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("Slug", "IsActive"), new[] { "Name", "Description", "ImageUrl", "SortOrder", "MetaDescription", "MetaKeyword" });

                    b.ToTable("Styles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1627),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Formal Classic",
                            Slug = "classic",
                            SortOrder = 10
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1651),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Casual Classic",
                            Slug = "casual-classic",
                            SortOrder = 20
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1670),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Formal Transitional",
                            Slug = "formal-transitional",
                            SortOrder = 30
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1697),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Formal Traditional",
                            Slug = "formal-traditional",
                            SortOrder = 40
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1719),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Casual Transitional",
                            Slug = "casual-transitional",
                            SortOrder = 50
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1741),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Casual Traditional",
                            Slug = "casual-traditional",
                            SortOrder = 60
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1760),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Casual Rustic",
                            Slug = "casual-rustic",
                            SortOrder = 70
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1788),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Formal Modern",
                            Slug = "formal-modern",
                            SortOrder = 80
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1807),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Casual Modern",
                            Slug = "casual-modern",
                            SortOrder = 90
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1826),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Formal Casual",
                            Slug = "formal-casual",
                            SortOrder = 100
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 898, DateTimeKind.Utc).AddTicks(1854),
                            Description = "",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Casual",
                            Slug = "casual",
                            SortOrder = 110
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.UPHColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("CodeHex")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Colour")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IsActive")
                        .IsUnique();

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("IsActive"), new[] { "Colour", "CodeHex", "Code" });

                    b.ToTable("UPHColours", (string)null);
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.UPHContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IsActive")
                        .IsUnique();

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("IsActive"), new[] { "Name", "Code" });

                    b.ToTable("UPHContents", (string)null);
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.UPHFabric", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Application")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Category")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CategoryTrim")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CleaningCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Color")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ColorCode")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Content1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Content2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Content3")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Content4")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Content5")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Content6")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Durability")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("Enable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Fabric")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("GradeTrim")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("GradeVn")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Hrepeat")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsEnabledOnWeb")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Pattern")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PatternCode")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool?>("Pfp")
                        .HasColumnType("bit");

                    b.Property<decimal?>("QtyOnHand")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool?>("Rlc")
                        .HasColumnType("bit");

                    b.Property<string>("Rubs")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sampled")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Um")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vrepeat")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Width")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("UPHFabrics", (string)null);
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.UPHPattern", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Pattern")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Patterncode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IsActive")
                        .IsUnique();

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("IsActive"), new[] { "Pattern", "Patterncode" });

                    b.ToTable("UPHPatterns", (string)null);
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Address2")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Email")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsPrimaryWarehouseForRegion")
                        .HasColumnType("bit");

                    b.Property<double>("Latitude")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("Longitude")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<int?>("ShippingZoneId")
                        .HasColumnType("int");

                    b.Property<string>("StateProvince")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("UpdateddAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.HasIndex("ShippingZoneId");

                    b.HasIndex("Latitude", "Longitude");

                    b.HasIndex("CountryCode", "StateProvince", "ZipCode");

                    b.ToTable("Warehouses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address1 = "1000 Logistics Way",
                            Address2 = "",
                            City = "Los Angeles",
                            CountryCode = "US",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2982),
                            IsActive = true,
                            IsPrimaryWarehouseForRegion = true,
                            Latitude = 34.052199999999999,
                            Longitude = -118.2437,
                            Name = "US West Coast Hub",
                            RegionId = 1,
                            StateProvince = "CA",
                            ZipCode = "90001"
                        },
                        new
                        {
                            Id = 2,
                            Address1 = "50 Cong Hoa",
                            Address2 = "",
                            City = "Ho Chi Minh City",
                            CountryCode = "VN",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2988),
                            IsActive = true,
                            IsPrimaryWarehouseForRegion = true,
                            Latitude = 10.762622,
                            Longitude = 106.660172,
                            Name = "Vietnam Central Depot",
                            RegionId = 2,
                            StateProvince = "SG",
                            ZipCode = "70000"
                        },
                        new
                        {
                            Id = 3,
                            Address1 = "1 Distribution Park",
                            Address2 = "",
                            City = "Birmingham",
                            CountryCode = "GB",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2991),
                            IsActive = true,
                            IsPrimaryWarehouseForRegion = true,
                            Latitude = 52.486199999999997,
                            Longitude = -1.8904000000000001,
                            Name = "UK Midlands Distribution",
                            RegionId = 3,
                            StateProvince = "ENG",
                            ZipCode = "B1 1AA"
                        },
                        new
                        {
                            Id = 4,
                            Address1 = "1 Tuas Link",
                            Address2 = "",
                            City = "Singapore",
                            CountryCode = "SG",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2993),
                            IsActive = true,
                            IsPrimaryWarehouseForRegion = true,
                            Latitude = 1.3521000000000001,
                            Longitude = 103.8198,
                            Name = "Singapore Main Warehouse",
                            RegionId = 4,
                            StateProvince = "",
                            ZipCode = "638596"
                        },
                        new
                        {
                            Id = 5,
                            Address1 = "888 Logistics Road",
                            Address2 = "",
                            City = "Shanghai",
                            CountryCode = "CN",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2995),
                            IsActive = true,
                            IsPrimaryWarehouseForRegion = true,
                            Latitude = 31.230399999999999,
                            Longitude = 121.47369999999999,
                            Name = "China Shanghai Logistics",
                            RegionId = 5,
                            StateProvince = "SH",
                            ZipCode = "200000"
                        },
                        new
                        {
                            Id = 6,
                            Address1 = "1 Kremlin St",
                            Address2 = "",
                            City = "Moscow",
                            CountryCode = "RU",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(2996),
                            IsActive = true,
                            IsPrimaryWarehouseForRegion = true,
                            Latitude = 55.755800000000001,
                            Longitude = 37.6173,
                            Name = "Russia Moscow Hub",
                            RegionId = 6,
                            StateProvince = "",
                            ZipCode = "101000"
                        },
                        new
                        {
                            Id = 7,
                            Address1 = "1 Sudirman Rd",
                            Address2 = "",
                            City = "Jakarta",
                            CountryCode = "ID",
                            CreatedAt = new DateTime(2025, 7, 9, 4, 18, 19, 899, DateTimeKind.Utc).AddTicks(3083),
                            IsActive = true,
                            IsPrimaryWarehouseForRegion = true,
                            Latitude = -6.2088000000000001,
                            Longitude = 106.8456,
                            Name = "Indonesia Jakarta Depot",
                            RegionId = 7,
                            StateProvince = "JK",
                            ZipCode = "10220"
                        });
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.CartItem", b =>
                {
                    b.HasOne("eCommerce.Domain.Entities.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCommerce.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.GlobalShippingLane", b =>
                {
                    b.HasOne("eCommerce.Domain.Entities.ShippingZone", "DestinationShippingZone")
                        .WithMany()
                        .HasForeignKey("DestinationShippingZoneId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("eCommerce.Domain.Entities.ShippingZone", "OriginShippingZone")
                        .WithMany()
                        .HasForeignKey("OriginShippingZoneId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DestinationShippingZone");

                    b.Navigation("OriginShippingZone");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.InventoryItem", b =>
                {
                    b.HasOne("eCommerce.Domain.Entities.Product", "Product")
                        .WithMany("InventoryItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("eCommerce.Domain.Entities.Warehouse", "Warehouse")
                        .WithMany("InventoryItems")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.Material", b =>
                {
                    b.HasOne("eCommerce.Domain.Entities.MaterialCategory", null)
                        .WithMany("Materials")
                        .HasForeignKey("MaterialCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.Order", b =>
                {
                    b.HasOne("eCommerce.Domain.Entities.Warehouse", "FulfillingWarehouse")
                        .WithMany()
                        .HasForeignKey("FulfillingWarehouseId");

                    b.Navigation("FulfillingWarehouse");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("eCommerce.Domain.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCommerce.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.Product", b =>
                {
                    b.HasOne("eCommerce.Domain.Entities.Collection", "Collection")
                        .WithMany()
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCommerce.Domain.Entities.LifeStyle", "LifeStyle")
                        .WithMany()
                        .HasForeignKey("LifeStyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCommerce.Domain.Entities.ProductCategory", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCommerce.Domain.Entities.ProductShippingProfile", "ProductShippingProfile")
                        .WithMany("Products")
                        .HasForeignKey("ProductShippingProfileId");

                    b.HasOne("eCommerce.Domain.Entities.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCommerce.Domain.Entities.Style", "Style")
                        .WithMany()
                        .HasForeignKey("StyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCommerce.Domain.Entities.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Collection");

                    b.Navigation("LifeStyle");

                    b.Navigation("ProductCategory");

                    b.Navigation("ProductShippingProfile");

                    b.Navigation("ProductType");

                    b.Navigation("Room");

                    b.Navigation("Style");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ProductCare", b =>
                {
                    b.HasOne("eCommerce.Domain.Entities.Care", "Care")
                        .WithMany()
                        .HasForeignKey("CareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCommerce.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Care");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ProductFabric", b =>
                {
                    b.HasOne("eCommerce.Domain.Entities.UPHFabric", "UPHFabric")
                        .WithMany()
                        .HasForeignKey("UPHFabricId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UPHFabric");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ProductImage", b =>
                {
                    b.HasOne("eCommerce.Domain.Entities.ProductVariant", "ProductVariant")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductVariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductVariant");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ProductOptionValue", b =>
                {
                    b.HasOne("eCommerce.Domain.Entities.ProductOption", "Option")
                        .WithMany("ProductOptionValues")
                        .HasForeignKey("ProductOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Option");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ProductPrice", b =>
                {
                    b.HasOne("eCommerce.Domain.Entities.Product", "Product")
                        .WithMany("Prices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCommerce.Domain.Entities.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ProductRegionAvailability", b =>
                {
                    b.HasOne("eCommerce.Domain.Entities.Product", "Product")
                        .WithMany("RegionAvailabilities")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCommerce.Domain.Entities.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ProductTranslation", b =>
                {
                    b.HasOne("eCommerce.Domain.Entities.Product", "Product")
                        .WithMany("ProductTranslations")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ProductType", b =>
                {
                    b.HasOne("eCommerce.Domain.Entities.Room", null)
                        .WithMany("ProductTypes")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ProductVariant", b =>
                {
                    b.HasOne("eCommerce.Domain.Entities.Product", "Product")
                        .WithMany("ProductVariants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ProductVariantOptionValue", b =>
                {
                    b.HasOne("eCommerce.Domain.Entities.ProductOptionValue", "ProductOptionValue")
                        .WithMany()
                        .HasForeignKey("ProductOptionValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCommerce.Domain.Entities.ProductVariant", "ProductVariant")
                        .WithMany("ProductVariantOptionValues")
                        .HasForeignKey("ProductVariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductOptionValue");

                    b.Navigation("ProductVariant");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ShippingRateRule", b =>
                {
                    b.HasOne("eCommerce.Domain.Entities.ShippingZone", "DestinationShippingZone")
                        .WithMany("DestinationRateRules")
                        .HasForeignKey("DestinationShippingZoneId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("eCommerce.Domain.Entities.GlobalShippingLane", "GlobalShippingLane")
                        .WithMany()
                        .HasForeignKey("GlobalShippingLaneId");

                    b.HasOne("eCommerce.Domain.Entities.ShippingZone", "OriginShippingZone")
                        .WithMany("OriginRateRules")
                        .HasForeignKey("OriginShippingZoneId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("eCommerce.Domain.Entities.ProductCategory", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("ProductCategoryId");

                    b.HasOne("eCommerce.Domain.Entities.ProductShippingProfile", "ProductShippingProfile")
                        .WithMany()
                        .HasForeignKey("ProductShippingProfileId");

                    b.HasOne("eCommerce.Domain.Entities.ShippingServiceLevel", "ShippingServiceLevel")
                        .WithMany("ShippingRateRules")
                        .HasForeignKey("ShippingServiceLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DestinationShippingZone");

                    b.Navigation("GlobalShippingLane");

                    b.Navigation("OriginShippingZone");

                    b.Navigation("ProductCategory");

                    b.Navigation("ProductShippingProfile");

                    b.Navigation("ShippingServiceLevel");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ShippingRateTier", b =>
                {
                    b.HasOne("eCommerce.Domain.Entities.ShippingRateRule", "ShippingRateRule")
                        .WithMany("ShippingRateTiers")
                        .HasForeignKey("ShippingRateRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShippingRateRule");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ShippingZone", b =>
                {
                    b.HasOne("eCommerce.Domain.Entities.Region", "Region")
                        .WithMany("ShippingZones")
                        .HasForeignKey("RegionId");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ShippingZoneDetail", b =>
                {
                    b.HasOne("eCommerce.Domain.Entities.ShippingZone", "ShippingZone")
                        .WithMany("ShippingZoneDetails")
                        .HasForeignKey("ShippingZoneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShippingZone");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.Warehouse", b =>
                {
                    b.HasOne("eCommerce.Domain.Entities.Region", "Region")
                        .WithMany("Warehouses")
                        .HasForeignKey("RegionId");

                    b.HasOne("eCommerce.Domain.Entities.ShippingZone", "ShippingZone")
                        .WithMany()
                        .HasForeignKey("ShippingZoneId");

                    b.Navigation("Region");

                    b.Navigation("ShippingZone");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.MaterialCategory", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.Product", b =>
                {
                    b.Navigation("InventoryItems");

                    b.Navigation("Prices");

                    b.Navigation("ProductTranslations");

                    b.Navigation("ProductVariants");

                    b.Navigation("RegionAvailabilities");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ProductOption", b =>
                {
                    b.Navigation("ProductOptionValues");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ProductShippingProfile", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ProductVariant", b =>
                {
                    b.Navigation("ProductImages");

                    b.Navigation("ProductVariantOptionValues");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.Region", b =>
                {
                    b.Navigation("ShippingZones");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.Room", b =>
                {
                    b.Navigation("ProductTypes");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ShippingRateRule", b =>
                {
                    b.Navigation("ShippingRateTiers");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ShippingServiceLevel", b =>
                {
                    b.Navigation("ShippingRateRules");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.ShippingZone", b =>
                {
                    b.Navigation("DestinationRateRules");

                    b.Navigation("OriginRateRules");

                    b.Navigation("ShippingZoneDetails");
                });

            modelBuilder.Entity("eCommerce.Domain.Entities.Warehouse", b =>
                {
                    b.Navigation("InventoryItems");
                });
#pragma warning restore 612, 618
        }
    }
}
